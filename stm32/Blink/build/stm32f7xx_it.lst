ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccZlWiMp.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f7xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-sp-d16
  26              	NMI_Handler:
  27              	.LFB144:
  28              		.file 1 "Core/Src/stm32f7xx_it.c"
   1:Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f7xx_it.c **** /**
   3:Core/Src/stm32f7xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f7xx_it.c ****   * @file    stm32f7xx_it.c
   5:Core/Src/stm32f7xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f7xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f7xx_it.c ****   * @attention
   8:Core/Src/stm32f7xx_it.c ****   *
   9:Core/Src/stm32f7xx_it.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/stm32f7xx_it.c ****   * All rights reserved.</center></h2>
  11:Core/Src/stm32f7xx_it.c ****   *
  12:Core/Src/stm32f7xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/stm32f7xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/stm32f7xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/stm32f7xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/stm32f7xx_it.c ****   *
  17:Core/Src/stm32f7xx_it.c ****   ******************************************************************************
  18:Core/Src/stm32f7xx_it.c ****   */
  19:Core/Src/stm32f7xx_it.c **** /* USER CODE END Header */
  20:Core/Src/stm32f7xx_it.c **** 
  21:Core/Src/stm32f7xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32f7xx_it.c **** #include "main.h"
  23:Core/Src/stm32f7xx_it.c **** #include "stm32f7xx_it.h"
  24:Core/Src/stm32f7xx_it.c **** #include "usart.h"
  25:Core/Src/stm32f7xx_it.c **** #include <stdio.h>
  26:Core/Src/stm32f7xx_it.c **** #include <string.h>
  27:Core/Src/stm32f7xx_it.c **** #include "utils.h"
  28:Core/Src/stm32f7xx_it.c **** /* Private includes ----------------------------------------------------------*/
  29:Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN Includes */
  30:Core/Src/stm32f7xx_it.c **** /* USER CODE END Includes */
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccZlWiMp.s 			page 2


  31:Core/Src/stm32f7xx_it.c **** 
  32:Core/Src/stm32f7xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  33:Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN TD */
  34:Core/Src/stm32f7xx_it.c **** 
  35:Core/Src/stm32f7xx_it.c **** /* USER CODE END TD */
  36:Core/Src/stm32f7xx_it.c **** 
  37:Core/Src/stm32f7xx_it.c **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN PD */
  39:Core/Src/stm32f7xx_it.c **** 
  40:Core/Src/stm32f7xx_it.c **** /* USER CODE END PD */
  41:Core/Src/stm32f7xx_it.c **** 
  42:Core/Src/stm32f7xx_it.c **** /* Private macro -------------------------------------------------------------*/
  43:Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN PM */
  44:Core/Src/stm32f7xx_it.c **** 
  45:Core/Src/stm32f7xx_it.c **** /* USER CODE END PM */
  46:Core/Src/stm32f7xx_it.c **** 
  47:Core/Src/stm32f7xx_it.c **** /* Private variables ---------------------------------------------------------*/
  48:Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN PV */
  49:Core/Src/stm32f7xx_it.c **** 
  50:Core/Src/stm32f7xx_it.c **** /* USER CODE END PV */
  51:Core/Src/stm32f7xx_it.c **** 
  52:Core/Src/stm32f7xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  53:Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN PFP */
  54:Core/Src/stm32f7xx_it.c **** 
  55:Core/Src/stm32f7xx_it.c **** /* USER CODE END PFP */
  56:Core/Src/stm32f7xx_it.c **** 
  57:Core/Src/stm32f7xx_it.c **** /* Private user code ---------------------------------------------------------*/
  58:Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN 0 */
  59:Core/Src/stm32f7xx_it.c **** 
  60:Core/Src/stm32f7xx_it.c **** /* USER CODE END 0 */
  61:Core/Src/stm32f7xx_it.c **** 
  62:Core/Src/stm32f7xx_it.c **** /* External variables --------------------------------------------------------*/
  63:Core/Src/stm32f7xx_it.c **** extern I2C_HandleTypeDef hi2c4;
  64:Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN EV */
  65:Core/Src/stm32f7xx_it.c **** 
  66:Core/Src/stm32f7xx_it.c **** /* USER CODE END EV */
  67:Core/Src/stm32f7xx_it.c **** 
  68:Core/Src/stm32f7xx_it.c **** /******************************************************************************/
  69:Core/Src/stm32f7xx_it.c **** /*           Cortex-M7 Processor Interruption and Exception Handlers          */
  70:Core/Src/stm32f7xx_it.c **** /******************************************************************************/
  71:Core/Src/stm32f7xx_it.c **** /**
  72:Core/Src/stm32f7xx_it.c ****   * @brief This function handles Non maskable interrupt.
  73:Core/Src/stm32f7xx_it.c ****   */
  74:Core/Src/stm32f7xx_it.c **** void NMI_Handler(void)
  75:Core/Src/stm32f7xx_it.c **** {
  29              		.loc 1 75 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.L2:
  76:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  77:Core/Src/stm32f7xx_it.c **** 
  78:Core/Src/stm32f7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  79:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  80:Core/Src/stm32f7xx_it.c ****   while (1)
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccZlWiMp.s 			page 3


  36              		.loc 1 80 3 discriminator 1 view .LVU1
  81:Core/Src/stm32f7xx_it.c ****   {
  82:Core/Src/stm32f7xx_it.c ****   }
  37              		.loc 1 82 3 discriminator 1 view .LVU2
  80:Core/Src/stm32f7xx_it.c ****   {
  38              		.loc 1 80 9 discriminator 1 view .LVU3
  39 0000 FEE7     		b	.L2
  40              		.cfi_endproc
  41              	.LFE144:
  43              		.section	.text.HardFault_Handler,"ax",%progbits
  44              		.align	1
  45              		.global	HardFault_Handler
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv5-sp-d16
  51              	HardFault_Handler:
  52              	.LFB145:
  83:Core/Src/stm32f7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  84:Core/Src/stm32f7xx_it.c **** }
  85:Core/Src/stm32f7xx_it.c **** 
  86:Core/Src/stm32f7xx_it.c **** /**
  87:Core/Src/stm32f7xx_it.c ****   * @brief This function handles Hard fault interrupt.
  88:Core/Src/stm32f7xx_it.c ****   */
  89:Core/Src/stm32f7xx_it.c **** void HardFault_Handler(void)
  90:Core/Src/stm32f7xx_it.c **** {
  53              		.loc 1 90 1 view -0
  54              		.cfi_startproc
  55              		@ Volatile: function does not return.
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
  59              	.L4:
  91:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  92:Core/Src/stm32f7xx_it.c **** 
  93:Core/Src/stm32f7xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  94:Core/Src/stm32f7xx_it.c ****   while (1)
  60              		.loc 1 94 3 discriminator 1 view .LVU5
  95:Core/Src/stm32f7xx_it.c ****   {
  96:Core/Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  97:Core/Src/stm32f7xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  98:Core/Src/stm32f7xx_it.c ****   }
  61              		.loc 1 98 3 discriminator 1 view .LVU6
  94:Core/Src/stm32f7xx_it.c ****   {
  62              		.loc 1 94 9 discriminator 1 view .LVU7
  63 0000 FEE7     		b	.L4
  64              		.cfi_endproc
  65              	.LFE145:
  67              		.section	.text.MemManage_Handler,"ax",%progbits
  68              		.align	1
  69              		.global	MemManage_Handler
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  73              		.fpu fpv5-sp-d16
  75              	MemManage_Handler:
  76              	.LFB146:
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccZlWiMp.s 			page 4


  99:Core/Src/stm32f7xx_it.c **** }
 100:Core/Src/stm32f7xx_it.c **** 
 101:Core/Src/stm32f7xx_it.c **** /**
 102:Core/Src/stm32f7xx_it.c ****   * @brief This function handles Memory management fault.
 103:Core/Src/stm32f7xx_it.c ****   */
 104:Core/Src/stm32f7xx_it.c **** void MemManage_Handler(void)
 105:Core/Src/stm32f7xx_it.c **** {
  77              		.loc 1 105 1 view -0
  78              		.cfi_startproc
  79              		@ Volatile: function does not return.
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  83              	.L6:
 106:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 107:Core/Src/stm32f7xx_it.c **** 
 108:Core/Src/stm32f7xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 109:Core/Src/stm32f7xx_it.c ****   while (1)
  84              		.loc 1 109 3 discriminator 1 view .LVU9
 110:Core/Src/stm32f7xx_it.c ****   {
 111:Core/Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 112:Core/Src/stm32f7xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 113:Core/Src/stm32f7xx_it.c ****   }
  85              		.loc 1 113 3 discriminator 1 view .LVU10
 109:Core/Src/stm32f7xx_it.c ****   {
  86              		.loc 1 109 9 discriminator 1 view .LVU11
  87 0000 FEE7     		b	.L6
  88              		.cfi_endproc
  89              	.LFE146:
  91              		.section	.text.BusFault_Handler,"ax",%progbits
  92              		.align	1
  93              		.global	BusFault_Handler
  94              		.syntax unified
  95              		.thumb
  96              		.thumb_func
  97              		.fpu fpv5-sp-d16
  99              	BusFault_Handler:
 100              	.LFB147:
 114:Core/Src/stm32f7xx_it.c **** }
 115:Core/Src/stm32f7xx_it.c **** 
 116:Core/Src/stm32f7xx_it.c **** /**
 117:Core/Src/stm32f7xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 118:Core/Src/stm32f7xx_it.c ****   */
 119:Core/Src/stm32f7xx_it.c **** void BusFault_Handler(void)
 120:Core/Src/stm32f7xx_it.c **** {
 101              		.loc 1 120 1 view -0
 102              		.cfi_startproc
 103              		@ Volatile: function does not return.
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106              		@ link register save eliminated.
 107              	.L8:
 121:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 122:Core/Src/stm32f7xx_it.c **** 
 123:Core/Src/stm32f7xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 124:Core/Src/stm32f7xx_it.c ****   while (1)
 108              		.loc 1 124 3 discriminator 1 view .LVU13
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccZlWiMp.s 			page 5


 125:Core/Src/stm32f7xx_it.c ****   {
 126:Core/Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 127:Core/Src/stm32f7xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 128:Core/Src/stm32f7xx_it.c ****   }
 109              		.loc 1 128 3 discriminator 1 view .LVU14
 124:Core/Src/stm32f7xx_it.c ****   {
 110              		.loc 1 124 9 discriminator 1 view .LVU15
 111 0000 FEE7     		b	.L8
 112              		.cfi_endproc
 113              	.LFE147:
 115              		.section	.text.UsageFault_Handler,"ax",%progbits
 116              		.align	1
 117              		.global	UsageFault_Handler
 118              		.syntax unified
 119              		.thumb
 120              		.thumb_func
 121              		.fpu fpv5-sp-d16
 123              	UsageFault_Handler:
 124              	.LFB148:
 129:Core/Src/stm32f7xx_it.c **** }
 130:Core/Src/stm32f7xx_it.c **** 
 131:Core/Src/stm32f7xx_it.c **** /**
 132:Core/Src/stm32f7xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 133:Core/Src/stm32f7xx_it.c ****   */
 134:Core/Src/stm32f7xx_it.c **** void UsageFault_Handler(void)
 135:Core/Src/stm32f7xx_it.c **** {
 125              		.loc 1 135 1 view -0
 126              		.cfi_startproc
 127              		@ Volatile: function does not return.
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              		@ link register save eliminated.
 131              	.L10:
 136:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 137:Core/Src/stm32f7xx_it.c **** 
 138:Core/Src/stm32f7xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 139:Core/Src/stm32f7xx_it.c ****   while (1)
 132              		.loc 1 139 3 discriminator 1 view .LVU17
 140:Core/Src/stm32f7xx_it.c ****   {
 141:Core/Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 142:Core/Src/stm32f7xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 143:Core/Src/stm32f7xx_it.c ****   }
 133              		.loc 1 143 3 discriminator 1 view .LVU18
 139:Core/Src/stm32f7xx_it.c ****   {
 134              		.loc 1 139 9 discriminator 1 view .LVU19
 135 0000 FEE7     		b	.L10
 136              		.cfi_endproc
 137              	.LFE148:
 139              		.section	.text.SVC_Handler,"ax",%progbits
 140              		.align	1
 141              		.global	SVC_Handler
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 145              		.fpu fpv5-sp-d16
 147              	SVC_Handler:
 148              	.LFB149:
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccZlWiMp.s 			page 6


 144:Core/Src/stm32f7xx_it.c **** }
 145:Core/Src/stm32f7xx_it.c **** 
 146:Core/Src/stm32f7xx_it.c **** /**
 147:Core/Src/stm32f7xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 148:Core/Src/stm32f7xx_it.c ****   */
 149:Core/Src/stm32f7xx_it.c **** void SVC_Handler(void)
 150:Core/Src/stm32f7xx_it.c **** {
 149              		.loc 1 150 1 view -0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		@ link register save eliminated.
 151:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 152:Core/Src/stm32f7xx_it.c **** 
 153:Core/Src/stm32f7xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 154:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 155:Core/Src/stm32f7xx_it.c **** 
 156:Core/Src/stm32f7xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 157:Core/Src/stm32f7xx_it.c **** }
 154              		.loc 1 157 1 view .LVU21
 155 0000 7047     		bx	lr
 156              		.cfi_endproc
 157              	.LFE149:
 159              		.section	.text.DebugMon_Handler,"ax",%progbits
 160              		.align	1
 161              		.global	DebugMon_Handler
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu fpv5-sp-d16
 167              	DebugMon_Handler:
 168              	.LFB150:
 158:Core/Src/stm32f7xx_it.c **** 
 159:Core/Src/stm32f7xx_it.c **** /**
 160:Core/Src/stm32f7xx_it.c ****   * @brief This function handles Debug monitor.
 161:Core/Src/stm32f7xx_it.c ****   */
 162:Core/Src/stm32f7xx_it.c **** void DebugMon_Handler(void)
 163:Core/Src/stm32f7xx_it.c **** {
 169              		.loc 1 163 1 view -0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173              		@ link register save eliminated.
 164:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 165:Core/Src/stm32f7xx_it.c **** 
 166:Core/Src/stm32f7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 167:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 168:Core/Src/stm32f7xx_it.c **** 
 169:Core/Src/stm32f7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 170:Core/Src/stm32f7xx_it.c **** }
 174              		.loc 1 170 1 view .LVU23
 175 0000 7047     		bx	lr
 176              		.cfi_endproc
 177              	.LFE150:
 179              		.section	.text.PendSV_Handler,"ax",%progbits
 180              		.align	1
 181              		.global	PendSV_Handler
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccZlWiMp.s 			page 7


 182              		.syntax unified
 183              		.thumb
 184              		.thumb_func
 185              		.fpu fpv5-sp-d16
 187              	PendSV_Handler:
 188              	.LFB151:
 171:Core/Src/stm32f7xx_it.c **** 
 172:Core/Src/stm32f7xx_it.c **** /**
 173:Core/Src/stm32f7xx_it.c ****   * @brief This function handles Pendable request for system service.
 174:Core/Src/stm32f7xx_it.c ****   */
 175:Core/Src/stm32f7xx_it.c **** void PendSV_Handler(void)
 176:Core/Src/stm32f7xx_it.c **** {
 189              		.loc 1 176 1 view -0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              		@ link register save eliminated.
 177:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 178:Core/Src/stm32f7xx_it.c **** 
 179:Core/Src/stm32f7xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 180:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 181:Core/Src/stm32f7xx_it.c **** 
 182:Core/Src/stm32f7xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 183:Core/Src/stm32f7xx_it.c **** }
 194              		.loc 1 183 1 view .LVU25
 195 0000 7047     		bx	lr
 196              		.cfi_endproc
 197              	.LFE151:
 199              		.section	.text.SysTick_Handler,"ax",%progbits
 200              		.align	1
 201              		.global	SysTick_Handler
 202              		.syntax unified
 203              		.thumb
 204              		.thumb_func
 205              		.fpu fpv5-sp-d16
 207              	SysTick_Handler:
 208              	.LFB152:
 184:Core/Src/stm32f7xx_it.c **** 
 185:Core/Src/stm32f7xx_it.c **** /**
 186:Core/Src/stm32f7xx_it.c ****   * @brief This function handles System tick timer.
 187:Core/Src/stm32f7xx_it.c ****   */
 188:Core/Src/stm32f7xx_it.c **** void SysTick_Handler(void)
 189:Core/Src/stm32f7xx_it.c **** {
 209              		.loc 1 189 1 view -0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213 0000 08B5     		push	{r3, lr}
 214              	.LCFI0:
 215              		.cfi_def_cfa_offset 8
 216              		.cfi_offset 3, -8
 217              		.cfi_offset 14, -4
 190:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 191:Core/Src/stm32f7xx_it.c **** 
 192:Core/Src/stm32f7xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 193:Core/Src/stm32f7xx_it.c ****   HAL_IncTick();
 218              		.loc 1 193 3 view .LVU27
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccZlWiMp.s 			page 8


 219 0002 FFF7FEFF 		bl	HAL_IncTick
 220              	.LVL0:
 194:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 195:Core/Src/stm32f7xx_it.c **** 
 196:Core/Src/stm32f7xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 197:Core/Src/stm32f7xx_it.c **** }
 221              		.loc 1 197 1 is_stmt 0 view .LVU28
 222 0006 08BD     		pop	{r3, pc}
 223              		.cfi_endproc
 224              	.LFE152:
 226              		.section	.text.I2C4_EV_IRQHandler,"ax",%progbits
 227              		.align	1
 228              		.global	I2C4_EV_IRQHandler
 229              		.syntax unified
 230              		.thumb
 231              		.thumb_func
 232              		.fpu fpv5-sp-d16
 234              	I2C4_EV_IRQHandler:
 235              	.LFB153:
 198:Core/Src/stm32f7xx_it.c **** 
 199:Core/Src/stm32f7xx_it.c **** /******************************************************************************/
 200:Core/Src/stm32f7xx_it.c **** /* STM32F7xx Peripheral Interrupt Handlers                                    */
 201:Core/Src/stm32f7xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 202:Core/Src/stm32f7xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 203:Core/Src/stm32f7xx_it.c **** /* please refer to the startup file (startup_stm32f7xx.s).                    */
 204:Core/Src/stm32f7xx_it.c **** /******************************************************************************/
 205:Core/Src/stm32f7xx_it.c **** 
 206:Core/Src/stm32f7xx_it.c **** /**
 207:Core/Src/stm32f7xx_it.c ****   * @brief This function handles I2C4 event interrupt.
 208:Core/Src/stm32f7xx_it.c ****   */
 209:Core/Src/stm32f7xx_it.c **** char buffer[50];
 210:Core/Src/stm32f7xx_it.c **** int index1 = -1, index2 = -1;
 211:Core/Src/stm32f7xx_it.c **** 
 212:Core/Src/stm32f7xx_it.c **** void I2C4_EV_IRQHandler(void)
 213:Core/Src/stm32f7xx_it.c **** {
 236              		.loc 1 213 1 is_stmt 1 view -0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 0
 239              		@ frame_needed = 0, uses_anonymous_args = 0
 240              		@ link register save eliminated.
 214:Core/Src/stm32f7xx_it.c ****   unsigned long isr = I2C4->ISR;
 241              		.loc 1 214 3 view .LVU30
 242              		.loc 1 214 17 is_stmt 0 view .LVU31
 243 0000 2E4B     		ldr	r3, .L27
 244 0002 9B69     		ldr	r3, [r3, #24]
 245              	.LVL1:
 215:Core/Src/stm32f7xx_it.c **** 
 216:Core/Src/stm32f7xx_it.c ****   if ( isr & I2C_ISR_TXIS )
 246              		.loc 1 216 3 is_stmt 1 view .LVU32
 247              		.loc 1 216 6 is_stmt 0 view .LVU33
 248 0004 13F0020F 		tst	r3, #2
 249 0008 1AD0     		beq	.L17
 217:Core/Src/stm32f7xx_it.c ****   {
 218:Core/Src/stm32f7xx_it.c ****     //HAL_UART_Transmit(&huart2, (uint8_t*) "TX\n", 4, 100);
 219:Core/Src/stm32f7xx_it.c ****     if(index1 != -1){
 250              		.loc 1 219 5 is_stmt 1 view .LVU34
 251              		.loc 1 219 15 is_stmt 0 view .LVU35
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccZlWiMp.s 			page 9


 252 000a 2D4A     		ldr	r2, .L27+4
 253 000c 1168     		ldr	r1, [r2]
 254              		.loc 1 219 7 view .LVU36
 255 000e B1F1FF3F 		cmp	r1, #-1
 256 0012 10D0     		beq	.L18
 220:Core/Src/stm32f7xx_it.c ****       
 221:Core/Src/stm32f7xx_it.c ****       //sprintf(buffer, "%u %d %d\n", i2cReg[index1][index2+1], index1, index2);
 222:Core/Src/stm32f7xx_it.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*) buffer, strlen(buffer), 100);
 223:Core/Src/stm32f7xx_it.c ****       I2C4->TXDR = i2cReg[index1][++index2];
 257              		.loc 1 223 7 is_stmt 1 view .LVU37
 258              		.loc 1 223 35 is_stmt 0 view .LVU38
 259 0014 2B48     		ldr	r0, .L27+8
 260 0016 0268     		ldr	r2, [r0]
 261 0018 0132     		adds	r2, r2, #1
 262              		.loc 1 223 18 view .LVU39
 263 001a 0260     		str	r2, [r0]
 264              		.loc 1 223 34 view .LVU40
 265 001c 2A48     		ldr	r0, .L27+12
 266 001e 00EB8101 		add	r1, r0, r1, lsl #2
 267 0022 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 268              		.loc 1 223 18 view .LVU41
 269 0024 254A     		ldr	r2, .L27
 270 0026 9162     		str	r1, [r2, #40]
 271              	.L19:
 224:Core/Src/stm32f7xx_it.c ****     }
 225:Core/Src/stm32f7xx_it.c ****     else
 226:Core/Src/stm32f7xx_it.c ****       I2C4->TXDR = index2;
 227:Core/Src/stm32f7xx_it.c ****   }
 228:Core/Src/stm32f7xx_it.c ****   else if ( isr & I2C_ISR_RXNE )
 229:Core/Src/stm32f7xx_it.c ****   {
 230:Core/Src/stm32f7xx_it.c ****     //HAL_UART_Transmit(&huart2, (uint8_t*) "RX\n", 4, 100);
 231:Core/Src/stm32f7xx_it.c ****     uint8_t a = (I2C4->RXDR);
 232:Core/Src/stm32f7xx_it.c ****     if(index1 == -1)
 233:Core/Src/stm32f7xx_it.c ****       index1 = a;
 234:Core/Src/stm32f7xx_it.c ****     else{
 235:Core/Src/stm32f7xx_it.c ****       i2cReg[index1][++index2] = a; 
 236:Core/Src/stm32f7xx_it.c ****     }
 237:Core/Src/stm32f7xx_it.c ****     
 238:Core/Src/stm32f7xx_it.c ****     //printf(buffer, "%d %d\n", index1, index2);
 239:Core/Src/stm32f7xx_it.c ****     //HAL_UART_Transmit(&huart2, (uint8_t*) buffer, strlen(buffer), 100);
 240:Core/Src/stm32f7xx_it.c ****   }
 241:Core/Src/stm32f7xx_it.c ****   else if ( isr & I2C_ISR_STOPF )
 242:Core/Src/stm32f7xx_it.c ****   {
 243:Core/Src/stm32f7xx_it.c ****     if(index2 != -1) index1 = index2 = -1;
 244:Core/Src/stm32f7xx_it.c ****     //HAL_UART_Transmit(&huart2, (uint8_t*) "STOP\n", 6, 100);
 245:Core/Src/stm32f7xx_it.c ****     I2C4->ISR |= I2C_ISR_TXE;
 246:Core/Src/stm32f7xx_it.c ****     I2C4->ICR = I2C_ICR_STOPCF;
 247:Core/Src/stm32f7xx_it.c ****   }
 248:Core/Src/stm32f7xx_it.c ****   else if ( isr & I2C_ISR_NACKF )
 249:Core/Src/stm32f7xx_it.c ****   {
 250:Core/Src/stm32f7xx_it.c ****     //HAL_UART_Transmit(&huart2, (uint8_t*) "NACK\n", 6, 100);
 251:Core/Src/stm32f7xx_it.c ****     I2C4->ICR = I2C_ICR_NACKCF;
 252:Core/Src/stm32f7xx_it.c ****   }
 253:Core/Src/stm32f7xx_it.c ****   else if ( isr & I2C_ISR_ADDR )
 254:Core/Src/stm32f7xx_it.c ****   {
 255:Core/Src/stm32f7xx_it.c ****     //HAL_UART_Transmit(&huart2, (uint8_t*) "ADDR\n", 6, 100);
 256:Core/Src/stm32f7xx_it.c ****     /* not required, the addr match interrupt is not enabled */
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccZlWiMp.s 			page 10


 257:Core/Src/stm32f7xx_it.c ****     I2C4->ICR = I2C_ICR_ADDRCF;
 258:Core/Src/stm32f7xx_it.c ****   }
 259:Core/Src/stm32f7xx_it.c ****  
 260:Core/Src/stm32f7xx_it.c ****   /* if at any time the addr match is set, clear the flag */
 261:Core/Src/stm32f7xx_it.c ****   /* not sure, whether this is required */
 262:Core/Src/stm32f7xx_it.c ****   if ( isr & I2C_ISR_ADDR )
 272              		.loc 1 262 3 is_stmt 1 view .LVU42
 273              		.loc 1 262 6 is_stmt 0 view .LVU43
 274 0028 13F0080F 		tst	r3, #8
 275 002c 02D0     		beq	.L16
 263:Core/Src/stm32f7xx_it.c ****   {
 264:Core/Src/stm32f7xx_it.c ****     I2C4->ICR = I2C_ICR_ADDRCF;
 276              		.loc 1 264 5 is_stmt 1 view .LVU44
 277              		.loc 1 264 15 is_stmt 0 view .LVU45
 278 002e 234B     		ldr	r3, .L27
 279              	.LVL2:
 280              		.loc 1 264 15 view .LVU46
 281 0030 0822     		movs	r2, #8
 282 0032 DA61     		str	r2, [r3, #28]
 283              	.L16:
 265:Core/Src/stm32f7xx_it.c ****   }
 266:Core/Src/stm32f7xx_it.c ****    
 267:Core/Src/stm32f7xx_it.c **** 
 268:Core/Src/stm32f7xx_it.c **** }
 284              		.loc 1 268 1 view .LVU47
 285 0034 7047     		bx	lr
 286              	.LVL3:
 287              	.L18:
 226:Core/Src/stm32f7xx_it.c ****   }
 288              		.loc 1 226 7 is_stmt 1 view .LVU48
 226:Core/Src/stm32f7xx_it.c ****   }
 289              		.loc 1 226 18 is_stmt 0 view .LVU49
 290 0036 234A     		ldr	r2, .L27+8
 291 0038 1168     		ldr	r1, [r2]
 292 003a 204A     		ldr	r2, .L27
 293 003c 9162     		str	r1, [r2, #40]
 294 003e F3E7     		b	.L19
 295              	.L17:
 228:Core/Src/stm32f7xx_it.c ****   {
 296              		.loc 1 228 8 is_stmt 1 view .LVU50
 228:Core/Src/stm32f7xx_it.c ****   {
 297              		.loc 1 228 11 is_stmt 0 view .LVU51
 298 0040 13F0040F 		tst	r3, #4
 299 0044 16D0     		beq	.L20
 300              	.LBB2:
 231:Core/Src/stm32f7xx_it.c ****     if(index1 == -1)
 301              		.loc 1 231 5 is_stmt 1 view .LVU52
 231:Core/Src/stm32f7xx_it.c ****     if(index1 == -1)
 302              		.loc 1 231 22 is_stmt 0 view .LVU53
 303 0046 1D4A     		ldr	r2, .L27
 304 0048 526A     		ldr	r2, [r2, #36]
 231:Core/Src/stm32f7xx_it.c ****     if(index1 == -1)
 305              		.loc 1 231 13 view .LVU54
 306 004a 5FFA82FC 		uxtb	ip, r2
 307              	.LVL4:
 232:Core/Src/stm32f7xx_it.c ****       index1 = a;
 308              		.loc 1 232 5 is_stmt 1 view .LVU55
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccZlWiMp.s 			page 11


 232:Core/Src/stm32f7xx_it.c ****       index1 = a;
 309              		.loc 1 232 15 is_stmt 0 view .LVU56
 310 004e 1C49     		ldr	r1, .L27+4
 311 0050 0968     		ldr	r1, [r1]
 232:Core/Src/stm32f7xx_it.c ****       index1 = a;
 312              		.loc 1 232 7 view .LVU57
 313 0052 B1F1FF3F 		cmp	r1, #-1
 314 0056 09D0     		beq	.L26
 235:Core/Src/stm32f7xx_it.c ****     }
 315              		.loc 1 235 7 is_stmt 1 view .LVU58
 235:Core/Src/stm32f7xx_it.c ****     }
 316              		.loc 1 235 22 is_stmt 0 view .LVU59
 317 0058 1A48     		ldr	r0, .L27+8
 318 005a 0268     		ldr	r2, [r0]
 319 005c 0132     		adds	r2, r2, #1
 235:Core/Src/stm32f7xx_it.c ****     }
 320              		.loc 1 235 32 view .LVU60
 321 005e 0260     		str	r2, [r0]
 322 0060 1948     		ldr	r0, .L27+12
 323 0062 00EB8101 		add	r1, r0, r1, lsl #2
 324 0066 01F802C0 		strb	ip, [r1, r2]
 325 006a DDE7     		b	.L19
 326              	.L26:
 233:Core/Src/stm32f7xx_it.c ****     else{
 327              		.loc 1 233 7 is_stmt 1 view .LVU61
 233:Core/Src/stm32f7xx_it.c ****     else{
 328              		.loc 1 233 14 is_stmt 0 view .LVU62
 329 006c 1449     		ldr	r1, .L27+4
 330 006e C1F800C0 		str	ip, [r1]
 331 0072 D9E7     		b	.L19
 332              	.LVL5:
 333              	.L20:
 233:Core/Src/stm32f7xx_it.c ****     else{
 334              		.loc 1 233 14 view .LVU63
 335              	.LBE2:
 241:Core/Src/stm32f7xx_it.c ****   {
 336              		.loc 1 241 8 is_stmt 1 view .LVU64
 241:Core/Src/stm32f7xx_it.c ****   {
 337              		.loc 1 241 11 is_stmt 0 view .LVU65
 338 0074 13F0200F 		tst	r3, #32
 339 0078 12D0     		beq	.L22
 243:Core/Src/stm32f7xx_it.c ****     //HAL_UART_Transmit(&huart2, (uint8_t*) "STOP\n", 6, 100);
 340              		.loc 1 243 5 is_stmt 1 view .LVU66
 243:Core/Src/stm32f7xx_it.c ****     //HAL_UART_Transmit(&huart2, (uint8_t*) "STOP\n", 6, 100);
 341              		.loc 1 243 15 is_stmt 0 view .LVU67
 342 007a 124A     		ldr	r2, .L27+8
 343 007c 1268     		ldr	r2, [r2]
 243:Core/Src/stm32f7xx_it.c ****     //HAL_UART_Transmit(&huart2, (uint8_t*) "STOP\n", 6, 100);
 344              		.loc 1 243 7 view .LVU68
 345 007e B2F1FF3F 		cmp	r2, #-1
 346 0082 05D0     		beq	.L23
 243:Core/Src/stm32f7xx_it.c ****     //HAL_UART_Transmit(&huart2, (uint8_t*) "STOP\n", 6, 100);
 347              		.loc 1 243 22 is_stmt 1 discriminator 1 view .LVU69
 243:Core/Src/stm32f7xx_it.c ****     //HAL_UART_Transmit(&huart2, (uint8_t*) "STOP\n", 6, 100);
 348              		.loc 1 243 38 is_stmt 0 discriminator 1 view .LVU70
 349 0084 4FF0FF32 		mov	r2, #-1
 350 0088 0E49     		ldr	r1, .L27+8
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccZlWiMp.s 			page 12


 351 008a 0A60     		str	r2, [r1]
 243:Core/Src/stm32f7xx_it.c ****     //HAL_UART_Transmit(&huart2, (uint8_t*) "STOP\n", 6, 100);
 352              		.loc 1 243 29 discriminator 1 view .LVU71
 353 008c 0C49     		ldr	r1, .L27+4
 354 008e 0A60     		str	r2, [r1]
 355              	.L23:
 245:Core/Src/stm32f7xx_it.c ****     I2C4->ICR = I2C_ICR_STOPCF;
 356              		.loc 1 245 5 is_stmt 1 view .LVU72
 245:Core/Src/stm32f7xx_it.c ****     I2C4->ICR = I2C_ICR_STOPCF;
 357              		.loc 1 245 15 is_stmt 0 view .LVU73
 358 0090 0A4A     		ldr	r2, .L27
 359 0092 9169     		ldr	r1, [r2, #24]
 360 0094 41F00101 		orr	r1, r1, #1
 361 0098 9161     		str	r1, [r2, #24]
 246:Core/Src/stm32f7xx_it.c ****   }
 362              		.loc 1 246 5 is_stmt 1 view .LVU74
 246:Core/Src/stm32f7xx_it.c ****   }
 363              		.loc 1 246 15 is_stmt 0 view .LVU75
 364 009a 2021     		movs	r1, #32
 365 009c D161     		str	r1, [r2, #28]
 366 009e C3E7     		b	.L19
 367              	.L22:
 248:Core/Src/stm32f7xx_it.c ****   {
 368              		.loc 1 248 8 is_stmt 1 view .LVU76
 248:Core/Src/stm32f7xx_it.c ****   {
 369              		.loc 1 248 11 is_stmt 0 view .LVU77
 370 00a0 13F0100F 		tst	r3, #16
 371 00a4 03D0     		beq	.L24
 251:Core/Src/stm32f7xx_it.c ****   }
 372              		.loc 1 251 5 is_stmt 1 view .LVU78
 251:Core/Src/stm32f7xx_it.c ****   }
 373              		.loc 1 251 15 is_stmt 0 view .LVU79
 374 00a6 054A     		ldr	r2, .L27
 375 00a8 1021     		movs	r1, #16
 376 00aa D161     		str	r1, [r2, #28]
 377 00ac BCE7     		b	.L19
 378              	.L24:
 253:Core/Src/stm32f7xx_it.c ****   {
 379              		.loc 1 253 8 is_stmt 1 view .LVU80
 253:Core/Src/stm32f7xx_it.c ****   {
 380              		.loc 1 253 11 is_stmt 0 view .LVU81
 381 00ae 13F0080F 		tst	r3, #8
 382 00b2 B9D0     		beq	.L19
 257:Core/Src/stm32f7xx_it.c ****   }
 383              		.loc 1 257 5 is_stmt 1 view .LVU82
 257:Core/Src/stm32f7xx_it.c ****   }
 384              		.loc 1 257 15 is_stmt 0 view .LVU83
 385 00b4 014A     		ldr	r2, .L27
 386 00b6 0821     		movs	r1, #8
 387 00b8 D161     		str	r1, [r2, #28]
 388 00ba B5E7     		b	.L19
 389              	.L28:
 390              		.align	2
 391              	.L27:
 392 00bc 00600040 		.word	1073766400
 393 00c0 00000000 		.word	.LANCHOR0
 394 00c4 00000000 		.word	.LANCHOR1
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccZlWiMp.s 			page 13


 395 00c8 00000000 		.word	i2cReg
 396              		.cfi_endproc
 397              	.LFE153:
 399              		.global	index2
 400              		.global	index1
 401              		.global	buffer
 402              		.section	.bss.buffer,"aw",%nobits
 403              		.align	2
 406              	buffer:
 407 0000 00000000 		.space	50
 407      00000000 
 407      00000000 
 407      00000000 
 407      00000000 
 408              		.section	.data.index1,"aw"
 409              		.align	2
 410              		.set	.LANCHOR0,. + 0
 413              	index1:
 414 0000 FFFFFFFF 		.word	-1
 415              		.section	.data.index2,"aw"
 416              		.align	2
 417              		.set	.LANCHOR1,. + 0
 420              	index2:
 421 0000 FFFFFFFF 		.word	-1
 422              		.text
 423              	.Letext0:
 424              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\inc
 425              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\inc
 426              		.file 4 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 427              		.file 5 "Core/drogui/include/utils.h"
 428              		.file 6 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
ARM GAS  C:\Users\USUARIO\AppData\Local\Temp\ccZlWiMp.s 			page 14


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f7xx_it.c
C:\Users\USUARIO\AppData\Local\Temp\ccZlWiMp.s:18     .text.NMI_Handler:00000000 $t
C:\Users\USUARIO\AppData\Local\Temp\ccZlWiMp.s:26     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\USUARIO\AppData\Local\Temp\ccZlWiMp.s:44     .text.HardFault_Handler:00000000 $t
C:\Users\USUARIO\AppData\Local\Temp\ccZlWiMp.s:51     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\USUARIO\AppData\Local\Temp\ccZlWiMp.s:68     .text.MemManage_Handler:00000000 $t
C:\Users\USUARIO\AppData\Local\Temp\ccZlWiMp.s:75     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\USUARIO\AppData\Local\Temp\ccZlWiMp.s:92     .text.BusFault_Handler:00000000 $t
C:\Users\USUARIO\AppData\Local\Temp\ccZlWiMp.s:99     .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\USUARIO\AppData\Local\Temp\ccZlWiMp.s:116    .text.UsageFault_Handler:00000000 $t
C:\Users\USUARIO\AppData\Local\Temp\ccZlWiMp.s:123    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\USUARIO\AppData\Local\Temp\ccZlWiMp.s:140    .text.SVC_Handler:00000000 $t
C:\Users\USUARIO\AppData\Local\Temp\ccZlWiMp.s:147    .text.SVC_Handler:00000000 SVC_Handler
C:\Users\USUARIO\AppData\Local\Temp\ccZlWiMp.s:160    .text.DebugMon_Handler:00000000 $t
C:\Users\USUARIO\AppData\Local\Temp\ccZlWiMp.s:167    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\USUARIO\AppData\Local\Temp\ccZlWiMp.s:180    .text.PendSV_Handler:00000000 $t
C:\Users\USUARIO\AppData\Local\Temp\ccZlWiMp.s:187    .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\USUARIO\AppData\Local\Temp\ccZlWiMp.s:200    .text.SysTick_Handler:00000000 $t
C:\Users\USUARIO\AppData\Local\Temp\ccZlWiMp.s:207    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\USUARIO\AppData\Local\Temp\ccZlWiMp.s:227    .text.I2C4_EV_IRQHandler:00000000 $t
C:\Users\USUARIO\AppData\Local\Temp\ccZlWiMp.s:234    .text.I2C4_EV_IRQHandler:00000000 I2C4_EV_IRQHandler
C:\Users\USUARIO\AppData\Local\Temp\ccZlWiMp.s:392    .text.I2C4_EV_IRQHandler:000000bc $d
C:\Users\USUARIO\AppData\Local\Temp\ccZlWiMp.s:420    .data.index2:00000000 index2
C:\Users\USUARIO\AppData\Local\Temp\ccZlWiMp.s:413    .data.index1:00000000 index1
C:\Users\USUARIO\AppData\Local\Temp\ccZlWiMp.s:406    .bss.buffer:00000000 buffer
C:\Users\USUARIO\AppData\Local\Temp\ccZlWiMp.s:403    .bss.buffer:00000000 $d
C:\Users\USUARIO\AppData\Local\Temp\ccZlWiMp.s:409    .data.index1:00000000 $d
C:\Users\USUARIO\AppData\Local\Temp\ccZlWiMp.s:416    .data.index2:00000000 $d

UNDEFINED SYMBOLS
HAL_IncTick
i2cReg
