ARM GAS  C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f7xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-sp-d16
  26              	NMI_Handler:
  27              	.LFB144:
  28              		.file 1 "Core/Src/stm32f7xx_it.c"
   1:Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f7xx_it.c **** /**
   3:Core/Src/stm32f7xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f7xx_it.c ****   * @file    stm32f7xx_it.c
   5:Core/Src/stm32f7xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f7xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f7xx_it.c ****   * @attention
   8:Core/Src/stm32f7xx_it.c ****   *
   9:Core/Src/stm32f7xx_it.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/stm32f7xx_it.c ****   * All rights reserved.</center></h2>
  11:Core/Src/stm32f7xx_it.c ****   *
  12:Core/Src/stm32f7xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/stm32f7xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/stm32f7xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/stm32f7xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/stm32f7xx_it.c ****   *
  17:Core/Src/stm32f7xx_it.c ****   ******************************************************************************
  18:Core/Src/stm32f7xx_it.c ****   */
  19:Core/Src/stm32f7xx_it.c **** /* USER CODE END Header */
  20:Core/Src/stm32f7xx_it.c **** 
  21:Core/Src/stm32f7xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32f7xx_it.c **** #include "main.h"
  23:Core/Src/stm32f7xx_it.c **** #include "stm32f7xx_it.h"
  24:Core/Src/stm32f7xx_it.c **** #include "usart.h"
  25:Core/Src/stm32f7xx_it.c **** #include <stdio.h>
  26:Core/Src/stm32f7xx_it.c **** #include <string.h>
  27:Core/Src/stm32f7xx_it.c **** #include "utils.h"
  28:Core/Src/stm32f7xx_it.c **** /* Private includes ----------------------------------------------------------*/
  29:Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN Includes */
  30:Core/Src/stm32f7xx_it.c **** /* USER CODE END Includes */
ARM GAS  C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s 			page 2


  31:Core/Src/stm32f7xx_it.c **** 
  32:Core/Src/stm32f7xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  33:Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN TD */
  34:Core/Src/stm32f7xx_it.c **** 
  35:Core/Src/stm32f7xx_it.c **** /* USER CODE END TD */
  36:Core/Src/stm32f7xx_it.c **** 
  37:Core/Src/stm32f7xx_it.c **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN PD */
  39:Core/Src/stm32f7xx_it.c **** 
  40:Core/Src/stm32f7xx_it.c **** /* USER CODE END PD */
  41:Core/Src/stm32f7xx_it.c **** 
  42:Core/Src/stm32f7xx_it.c **** /* Private macro -------------------------------------------------------------*/
  43:Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN PM */
  44:Core/Src/stm32f7xx_it.c **** 
  45:Core/Src/stm32f7xx_it.c **** /* USER CODE END PM */
  46:Core/Src/stm32f7xx_it.c **** 
  47:Core/Src/stm32f7xx_it.c **** /* Private variables ---------------------------------------------------------*/
  48:Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN PV */
  49:Core/Src/stm32f7xx_it.c **** 
  50:Core/Src/stm32f7xx_it.c **** /* USER CODE END PV */
  51:Core/Src/stm32f7xx_it.c **** 
  52:Core/Src/stm32f7xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  53:Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN PFP */
  54:Core/Src/stm32f7xx_it.c **** 
  55:Core/Src/stm32f7xx_it.c **** /* USER CODE END PFP */
  56:Core/Src/stm32f7xx_it.c **** 
  57:Core/Src/stm32f7xx_it.c **** /* Private user code ---------------------------------------------------------*/
  58:Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN 0 */
  59:Core/Src/stm32f7xx_it.c **** 
  60:Core/Src/stm32f7xx_it.c **** /* USER CODE END 0 */
  61:Core/Src/stm32f7xx_it.c **** 
  62:Core/Src/stm32f7xx_it.c **** /* External variables --------------------------------------------------------*/
  63:Core/Src/stm32f7xx_it.c **** extern I2C_HandleTypeDef hi2c4;
  64:Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN EV */
  65:Core/Src/stm32f7xx_it.c **** 
  66:Core/Src/stm32f7xx_it.c **** /* USER CODE END EV */
  67:Core/Src/stm32f7xx_it.c **** 
  68:Core/Src/stm32f7xx_it.c **** /******************************************************************************/
  69:Core/Src/stm32f7xx_it.c **** /*           Cortex-M7 Processor Interruption and Exception Handlers          */
  70:Core/Src/stm32f7xx_it.c **** /******************************************************************************/
  71:Core/Src/stm32f7xx_it.c **** /**
  72:Core/Src/stm32f7xx_it.c ****   * @brief This function handles Non maskable interrupt.
  73:Core/Src/stm32f7xx_it.c ****   */
  74:Core/Src/stm32f7xx_it.c **** void NMI_Handler(void)
  75:Core/Src/stm32f7xx_it.c **** {
  29              		.loc 1 75 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.L2:
  76:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  77:Core/Src/stm32f7xx_it.c **** 
  78:Core/Src/stm32f7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  79:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  80:Core/Src/stm32f7xx_it.c ****   while (1)
ARM GAS  C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s 			page 3


  36              		.loc 1 80 3 discriminator 1 view .LVU1
  81:Core/Src/stm32f7xx_it.c ****   {
  82:Core/Src/stm32f7xx_it.c ****   }
  37              		.loc 1 82 3 discriminator 1 view .LVU2
  80:Core/Src/stm32f7xx_it.c ****   {
  38              		.loc 1 80 9 discriminator 1 view .LVU3
  39 0000 FEE7     		b	.L2
  40              		.cfi_endproc
  41              	.LFE144:
  43              		.section	.text.HardFault_Handler,"ax",%progbits
  44              		.align	1
  45              		.global	HardFault_Handler
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv5-sp-d16
  51              	HardFault_Handler:
  52              	.LFB145:
  83:Core/Src/stm32f7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  84:Core/Src/stm32f7xx_it.c **** }
  85:Core/Src/stm32f7xx_it.c **** 
  86:Core/Src/stm32f7xx_it.c **** /**
  87:Core/Src/stm32f7xx_it.c ****   * @brief This function handles Hard fault interrupt.
  88:Core/Src/stm32f7xx_it.c ****   */
  89:Core/Src/stm32f7xx_it.c **** void HardFault_Handler(void)
  90:Core/Src/stm32f7xx_it.c **** {
  53              		.loc 1 90 1 view -0
  54              		.cfi_startproc
  55              		@ Volatile: function does not return.
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
  59              	.L4:
  91:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  92:Core/Src/stm32f7xx_it.c **** 
  93:Core/Src/stm32f7xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  94:Core/Src/stm32f7xx_it.c ****   while (1)
  60              		.loc 1 94 3 discriminator 1 view .LVU5
  95:Core/Src/stm32f7xx_it.c ****   {
  96:Core/Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  97:Core/Src/stm32f7xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  98:Core/Src/stm32f7xx_it.c ****   }
  61              		.loc 1 98 3 discriminator 1 view .LVU6
  94:Core/Src/stm32f7xx_it.c ****   {
  62              		.loc 1 94 9 discriminator 1 view .LVU7
  63 0000 FEE7     		b	.L4
  64              		.cfi_endproc
  65              	.LFE145:
  67              		.section	.text.MemManage_Handler,"ax",%progbits
  68              		.align	1
  69              		.global	MemManage_Handler
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  73              		.fpu fpv5-sp-d16
  75              	MemManage_Handler:
  76              	.LFB146:
ARM GAS  C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s 			page 4


  99:Core/Src/stm32f7xx_it.c **** }
 100:Core/Src/stm32f7xx_it.c **** 
 101:Core/Src/stm32f7xx_it.c **** /**
 102:Core/Src/stm32f7xx_it.c ****   * @brief This function handles Memory management fault.
 103:Core/Src/stm32f7xx_it.c ****   */
 104:Core/Src/stm32f7xx_it.c **** void MemManage_Handler(void)
 105:Core/Src/stm32f7xx_it.c **** {
  77              		.loc 1 105 1 view -0
  78              		.cfi_startproc
  79              		@ Volatile: function does not return.
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  83              	.L6:
 106:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 107:Core/Src/stm32f7xx_it.c **** 
 108:Core/Src/stm32f7xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 109:Core/Src/stm32f7xx_it.c ****   while (1)
  84              		.loc 1 109 3 discriminator 1 view .LVU9
 110:Core/Src/stm32f7xx_it.c ****   {
 111:Core/Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 112:Core/Src/stm32f7xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 113:Core/Src/stm32f7xx_it.c ****   }
  85              		.loc 1 113 3 discriminator 1 view .LVU10
 109:Core/Src/stm32f7xx_it.c ****   {
  86              		.loc 1 109 9 discriminator 1 view .LVU11
  87 0000 FEE7     		b	.L6
  88              		.cfi_endproc
  89              	.LFE146:
  91              		.section	.text.BusFault_Handler,"ax",%progbits
  92              		.align	1
  93              		.global	BusFault_Handler
  94              		.syntax unified
  95              		.thumb
  96              		.thumb_func
  97              		.fpu fpv5-sp-d16
  99              	BusFault_Handler:
 100              	.LFB147:
 114:Core/Src/stm32f7xx_it.c **** }
 115:Core/Src/stm32f7xx_it.c **** 
 116:Core/Src/stm32f7xx_it.c **** /**
 117:Core/Src/stm32f7xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 118:Core/Src/stm32f7xx_it.c ****   */
 119:Core/Src/stm32f7xx_it.c **** void BusFault_Handler(void)
 120:Core/Src/stm32f7xx_it.c **** {
 101              		.loc 1 120 1 view -0
 102              		.cfi_startproc
 103              		@ Volatile: function does not return.
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106              		@ link register save eliminated.
 107              	.L8:
 121:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 122:Core/Src/stm32f7xx_it.c **** 
 123:Core/Src/stm32f7xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 124:Core/Src/stm32f7xx_it.c ****   while (1)
 108              		.loc 1 124 3 discriminator 1 view .LVU13
ARM GAS  C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s 			page 5


 125:Core/Src/stm32f7xx_it.c ****   {
 126:Core/Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 127:Core/Src/stm32f7xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 128:Core/Src/stm32f7xx_it.c ****   }
 109              		.loc 1 128 3 discriminator 1 view .LVU14
 124:Core/Src/stm32f7xx_it.c ****   {
 110              		.loc 1 124 9 discriminator 1 view .LVU15
 111 0000 FEE7     		b	.L8
 112              		.cfi_endproc
 113              	.LFE147:
 115              		.section	.text.UsageFault_Handler,"ax",%progbits
 116              		.align	1
 117              		.global	UsageFault_Handler
 118              		.syntax unified
 119              		.thumb
 120              		.thumb_func
 121              		.fpu fpv5-sp-d16
 123              	UsageFault_Handler:
 124              	.LFB148:
 129:Core/Src/stm32f7xx_it.c **** }
 130:Core/Src/stm32f7xx_it.c **** 
 131:Core/Src/stm32f7xx_it.c **** /**
 132:Core/Src/stm32f7xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 133:Core/Src/stm32f7xx_it.c ****   */
 134:Core/Src/stm32f7xx_it.c **** void UsageFault_Handler(void)
 135:Core/Src/stm32f7xx_it.c **** {
 125              		.loc 1 135 1 view -0
 126              		.cfi_startproc
 127              		@ Volatile: function does not return.
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              		@ link register save eliminated.
 131              	.L10:
 136:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 137:Core/Src/stm32f7xx_it.c **** 
 138:Core/Src/stm32f7xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 139:Core/Src/stm32f7xx_it.c ****   while (1)
 132              		.loc 1 139 3 discriminator 1 view .LVU17
 140:Core/Src/stm32f7xx_it.c ****   {
 141:Core/Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 142:Core/Src/stm32f7xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 143:Core/Src/stm32f7xx_it.c ****   }
 133              		.loc 1 143 3 discriminator 1 view .LVU18
 139:Core/Src/stm32f7xx_it.c ****   {
 134              		.loc 1 139 9 discriminator 1 view .LVU19
 135 0000 FEE7     		b	.L10
 136              		.cfi_endproc
 137              	.LFE148:
 139              		.section	.text.SVC_Handler,"ax",%progbits
 140              		.align	1
 141              		.global	SVC_Handler
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 145              		.fpu fpv5-sp-d16
 147              	SVC_Handler:
 148              	.LFB149:
ARM GAS  C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s 			page 6


 144:Core/Src/stm32f7xx_it.c **** }
 145:Core/Src/stm32f7xx_it.c **** 
 146:Core/Src/stm32f7xx_it.c **** /**
 147:Core/Src/stm32f7xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 148:Core/Src/stm32f7xx_it.c ****   */
 149:Core/Src/stm32f7xx_it.c **** void SVC_Handler(void)
 150:Core/Src/stm32f7xx_it.c **** {
 149              		.loc 1 150 1 view -0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		@ link register save eliminated.
 151:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 152:Core/Src/stm32f7xx_it.c **** 
 153:Core/Src/stm32f7xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 154:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 155:Core/Src/stm32f7xx_it.c **** 
 156:Core/Src/stm32f7xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 157:Core/Src/stm32f7xx_it.c **** }
 154              		.loc 1 157 1 view .LVU21
 155 0000 7047     		bx	lr
 156              		.cfi_endproc
 157              	.LFE149:
 159              		.section	.text.DebugMon_Handler,"ax",%progbits
 160              		.align	1
 161              		.global	DebugMon_Handler
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu fpv5-sp-d16
 167              	DebugMon_Handler:
 168              	.LFB150:
 158:Core/Src/stm32f7xx_it.c **** 
 159:Core/Src/stm32f7xx_it.c **** /**
 160:Core/Src/stm32f7xx_it.c ****   * @brief This function handles Debug monitor.
 161:Core/Src/stm32f7xx_it.c ****   */
 162:Core/Src/stm32f7xx_it.c **** void DebugMon_Handler(void)
 163:Core/Src/stm32f7xx_it.c **** {
 169              		.loc 1 163 1 view -0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173              		@ link register save eliminated.
 164:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 165:Core/Src/stm32f7xx_it.c **** 
 166:Core/Src/stm32f7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 167:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 168:Core/Src/stm32f7xx_it.c **** 
 169:Core/Src/stm32f7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 170:Core/Src/stm32f7xx_it.c **** }
 174              		.loc 1 170 1 view .LVU23
 175 0000 7047     		bx	lr
 176              		.cfi_endproc
 177              	.LFE150:
 179              		.section	.text.PendSV_Handler,"ax",%progbits
 180              		.align	1
 181              		.global	PendSV_Handler
ARM GAS  C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s 			page 7


 182              		.syntax unified
 183              		.thumb
 184              		.thumb_func
 185              		.fpu fpv5-sp-d16
 187              	PendSV_Handler:
 188              	.LFB151:
 171:Core/Src/stm32f7xx_it.c **** 
 172:Core/Src/stm32f7xx_it.c **** /**
 173:Core/Src/stm32f7xx_it.c ****   * @brief This function handles Pendable request for system service.
 174:Core/Src/stm32f7xx_it.c ****   */
 175:Core/Src/stm32f7xx_it.c **** void PendSV_Handler(void)
 176:Core/Src/stm32f7xx_it.c **** {
 189              		.loc 1 176 1 view -0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              		@ link register save eliminated.
 177:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 178:Core/Src/stm32f7xx_it.c **** 
 179:Core/Src/stm32f7xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 180:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 181:Core/Src/stm32f7xx_it.c **** 
 182:Core/Src/stm32f7xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 183:Core/Src/stm32f7xx_it.c **** }
 194              		.loc 1 183 1 view .LVU25
 195 0000 7047     		bx	lr
 196              		.cfi_endproc
 197              	.LFE151:
 199              		.section	.text.SysTick_Handler,"ax",%progbits
 200              		.align	1
 201              		.global	SysTick_Handler
 202              		.syntax unified
 203              		.thumb
 204              		.thumb_func
 205              		.fpu fpv5-sp-d16
 207              	SysTick_Handler:
 208              	.LFB152:
 184:Core/Src/stm32f7xx_it.c **** 
 185:Core/Src/stm32f7xx_it.c **** /**
 186:Core/Src/stm32f7xx_it.c ****   * @brief This function handles System tick timer.
 187:Core/Src/stm32f7xx_it.c ****   */
 188:Core/Src/stm32f7xx_it.c **** void SysTick_Handler(void)
 189:Core/Src/stm32f7xx_it.c **** {
 209              		.loc 1 189 1 view -0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213 0000 08B5     		push	{r3, lr}
 214              	.LCFI0:
 215              		.cfi_def_cfa_offset 8
 216              		.cfi_offset 3, -8
 217              		.cfi_offset 14, -4
 190:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 191:Core/Src/stm32f7xx_it.c **** 
 192:Core/Src/stm32f7xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 193:Core/Src/stm32f7xx_it.c ****   HAL_IncTick();
 218              		.loc 1 193 3 view .LVU27
ARM GAS  C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s 			page 8


 219 0002 FFF7FEFF 		bl	HAL_IncTick
 220              	.LVL0:
 194:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 195:Core/Src/stm32f7xx_it.c **** 
 196:Core/Src/stm32f7xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 197:Core/Src/stm32f7xx_it.c **** }
 221              		.loc 1 197 1 is_stmt 0 view .LVU28
 222 0006 08BD     		pop	{r3, pc}
 223              		.cfi_endproc
 224              	.LFE152:
 226              		.section	.rodata.I2C4_EV_IRQHandler.str1.4,"aMS",%progbits,1
 227              		.align	2
 228              	.LC0:
 229 0000 25782009 		.ascii	"%x \011 %x \011 %x \012\000"
 229      20257820 
 229      09202578 
 229      200A00
 230              		.section	.text.I2C4_EV_IRQHandler,"ax",%progbits
 231              		.align	1
 232              		.global	I2C4_EV_IRQHandler
 233              		.syntax unified
 234              		.thumb
 235              		.thumb_func
 236              		.fpu fpv5-sp-d16
 238              	I2C4_EV_IRQHandler:
 239              	.LFB153:
 198:Core/Src/stm32f7xx_it.c **** 
 199:Core/Src/stm32f7xx_it.c **** /******************************************************************************/
 200:Core/Src/stm32f7xx_it.c **** /* STM32F7xx Peripheral Interrupt Handlers                                    */
 201:Core/Src/stm32f7xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 202:Core/Src/stm32f7xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 203:Core/Src/stm32f7xx_it.c **** /* please refer to the startup file (startup_stm32f7xx.s).                    */
 204:Core/Src/stm32f7xx_it.c **** /******************************************************************************/
 205:Core/Src/stm32f7xx_it.c **** 
 206:Core/Src/stm32f7xx_it.c **** /**
 207:Core/Src/stm32f7xx_it.c ****   * @brief This function handles I2C4 event interrupt.
 208:Core/Src/stm32f7xx_it.c ****   */
 209:Core/Src/stm32f7xx_it.c **** char buffer[50];
 210:Core/Src/stm32f7xx_it.c **** int write_adress = -1, read_adress = -1;
 211:Core/Src/stm32f7xx_it.c **** int index_i2c = 0, state;
 212:Core/Src/stm32f7xx_it.c **** 
 213:Core/Src/stm32f7xx_it.c **** void I2C4_EV_IRQHandler(void)
 214:Core/Src/stm32f7xx_it.c **** {
 240              		.loc 1 214 1 is_stmt 1 view -0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 0
 243              		@ frame_needed = 0, uses_anonymous_args = 0
 244 0000 30B5     		push	{r4, r5, lr}
 245              	.LCFI1:
 246              		.cfi_def_cfa_offset 12
 247              		.cfi_offset 4, -12
 248              		.cfi_offset 5, -8
 249              		.cfi_offset 14, -4
 250 0002 83B0     		sub	sp, sp, #12
 251              	.LCFI2:
 252              		.cfi_def_cfa_offset 24
 215:Core/Src/stm32f7xx_it.c ****   sprintf(buffer, "%x \t %x \t %x \n", write_adress, read_adress, index_i2c);
ARM GAS  C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s 			page 9


 253              		.loc 1 215 3 view .LVU30
 254 0004 404C     		ldr	r4, .L30
 255 0006 414B     		ldr	r3, .L30+4
 256 0008 1B68     		ldr	r3, [r3]
 257 000a 0093     		str	r3, [sp]
 258 000c 404B     		ldr	r3, .L30+8
 259 000e 1B68     		ldr	r3, [r3]
 260 0010 404A     		ldr	r2, .L30+12
 261 0012 1268     		ldr	r2, [r2]
 262 0014 4049     		ldr	r1, .L30+16
 263 0016 2046     		mov	r0, r4
 264 0018 FFF7FEFF 		bl	sprintf
 265              	.LVL1:
 216:Core/Src/stm32f7xx_it.c ****   HAL_UART_Transmit(&huart2, (uint8_t*) buffer, strlen(buffer), 100);
 266              		.loc 1 216 3 view .LVU31
 267              		.loc 1 216 49 is_stmt 0 view .LVU32
 268 001c 2046     		mov	r0, r4
 269 001e FFF7FEFF 		bl	strlen
 270              	.LVL2:
 271              		.loc 1 216 3 view .LVU33
 272 0022 6423     		movs	r3, #100
 273 0024 82B2     		uxth	r2, r0
 274 0026 2146     		mov	r1, r4
 275 0028 3C48     		ldr	r0, .L30+20
 276 002a FFF7FEFF 		bl	HAL_UART_Transmit
 277              	.LVL3:
 217:Core/Src/stm32f7xx_it.c **** 
 218:Core/Src/stm32f7xx_it.c ****   unsigned long isr = I2C4->ISR;
 278              		.loc 1 218 3 is_stmt 1 view .LVU34
 279              		.loc 1 218 17 is_stmt 0 view .LVU35
 280 002e 3C4B     		ldr	r3, .L30+24
 281 0030 9B69     		ldr	r3, [r3, #24]
 282              	.LVL4:
 219:Core/Src/stm32f7xx_it.c **** 
 220:Core/Src/stm32f7xx_it.c ****   if ( isr & I2C_ISR_TXIS ) 
 283              		.loc 1 220 3 is_stmt 1 view .LVU36
 284              		.loc 1 220 6 is_stmt 0 view .LVU37
 285 0032 13F0020F 		tst	r3, #2
 286 0036 18D0     		beq	.L17
 221:Core/Src/stm32f7xx_it.c ****   {
 222:Core/Src/stm32f7xx_it.c ****     I2C4->TXDR = i2cReg[read_adress][ index_i2c++ ];
 287              		.loc 1 222 5 is_stmt 1 view .LVU38
 288              		.loc 1 222 37 is_stmt 0 view .LVU39
 289 0038 354A     		ldr	r2, .L30+8
 290 003a 1568     		ldr	r5, [r2]
 291              		.loc 1 222 48 view .LVU40
 292 003c 334C     		ldr	r4, .L30+4
 293 003e 2068     		ldr	r0, [r4]
 294 0040 411C     		adds	r1, r0, #1
 295 0042 2160     		str	r1, [r4]
 296              		.loc 1 222 37 view .LVU41
 297 0044 374A     		ldr	r2, .L30+28
 298 0046 02EB8502 		add	r2, r2, r5, lsl #2
 299 004a 105C     		ldrb	r0, [r2, r0]	@ zero_extendqisi2
 300              		.loc 1 222 16 view .LVU42
 301 004c 344A     		ldr	r2, .L30+24
 302 004e 9062     		str	r0, [r2, #40]
ARM GAS  C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s 			page 10


 223:Core/Src/stm32f7xx_it.c ****     if(index_i2c == 4) index_i2c = 0;
 303              		.loc 1 223 5 is_stmt 1 view .LVU43
 304              		.loc 1 223 7 is_stmt 0 view .LVU44
 305 0050 0429     		cmp	r1, #4
 306 0052 07D0     		beq	.L28
 307              	.L18:
 224:Core/Src/stm32f7xx_it.c ****   }
 225:Core/Src/stm32f7xx_it.c ****   else if ( isr & I2C_ISR_RXNE ){
 226:Core/Src/stm32f7xx_it.c **** 
 227:Core/Src/stm32f7xx_it.c ****     //HAL_UART_Transmit(&huart2, (uint8_t*) "RX\n", 4, 100);
 228:Core/Src/stm32f7xx_it.c ****     uint8_t a = (I2C4->RXDR);
 229:Core/Src/stm32f7xx_it.c ****     if(write_adress == -1){
 230:Core/Src/stm32f7xx_it.c ****         if(a & 1){
 231:Core/Src/stm32f7xx_it.c ****           write_adress = a;
 232:Core/Src/stm32f7xx_it.c ****         }
 233:Core/Src/stm32f7xx_it.c ****         else{
 234:Core/Src/stm32f7xx_it.c ****           read_adress = a;
 235:Core/Src/stm32f7xx_it.c ****         }
 236:Core/Src/stm32f7xx_it.c ****     }
 237:Core/Src/stm32f7xx_it.c ****     else{
 238:Core/Src/stm32f7xx_it.c ****       i2cReg[write_adress^1][ index_i2c++ ] = a;
 239:Core/Src/stm32f7xx_it.c ****     }
 240:Core/Src/stm32f7xx_it.c ****     if(index_i2c == 4) write_adress = -1, index_i2c = 0;
 241:Core/Src/stm32f7xx_it.c ****     
 242:Core/Src/stm32f7xx_it.c ****     //printf(buffer, "Rece %d %d\n", index1, index2);
 243:Core/Src/stm32f7xx_it.c ****     //HAL_UART_Transmit(&huart2, (uint8_t*) buffer, strlen(buffer), 100);
 244:Core/Src/stm32f7xx_it.c ****   }
 245:Core/Src/stm32f7xx_it.c ****   else if ( isr & I2C_ISR_STOPF )
 246:Core/Src/stm32f7xx_it.c ****   {
 247:Core/Src/stm32f7xx_it.c ****     if(index_i2c != 0) write_adress = read_adress = -1, index_i2c = 0;
 248:Core/Src/stm32f7xx_it.c ****     //HAL_UART_Transmit(&huart2, (uint8_t*) "STOP\n", 6, 100);
 249:Core/Src/stm32f7xx_it.c ****     I2C4->ISR |= I2C_ISR_TXE;
 250:Core/Src/stm32f7xx_it.c ****     I2C4->ICR = I2C_ICR_STOPCF;
 251:Core/Src/stm32f7xx_it.c ****   }
 252:Core/Src/stm32f7xx_it.c ****   else if ( isr & I2C_ISR_NACKF )
 253:Core/Src/stm32f7xx_it.c ****   {
 254:Core/Src/stm32f7xx_it.c ****     //HAL_UART_Transmit(&huart2, (uint8_t*) "NACK\n", 6, 100);
 255:Core/Src/stm32f7xx_it.c ****     I2C4->ICR = I2C_ICR_NACKCF;
 256:Core/Src/stm32f7xx_it.c ****   }
 257:Core/Src/stm32f7xx_it.c ****   else if ( isr & I2C_ISR_ADDR )
 258:Core/Src/stm32f7xx_it.c ****   {
 259:Core/Src/stm32f7xx_it.c ****     //HAL_UART_Transmit(&huart2, (uint8_t*) "ADDR\n", 6, 100);
 260:Core/Src/stm32f7xx_it.c ****     /* not required, the addr match interrupt is not enabled */
 261:Core/Src/stm32f7xx_it.c ****     I2C4->ICR = I2C_ICR_ADDRCF;
 262:Core/Src/stm32f7xx_it.c ****   }
 263:Core/Src/stm32f7xx_it.c ****  
 264:Core/Src/stm32f7xx_it.c ****   /* if at any time the addr match is set, clear the flag */
 265:Core/Src/stm32f7xx_it.c ****   /* not sure, whether this is required */
 266:Core/Src/stm32f7xx_it.c ****   if ( isr & I2C_ISR_ADDR )
 308              		.loc 1 266 3 is_stmt 1 view .LVU45
 309              		.loc 1 266 6 is_stmt 0 view .LVU46
 310 0054 13F0080F 		tst	r3, #8
 311 0058 02D0     		beq	.L16
 267:Core/Src/stm32f7xx_it.c ****   {
 268:Core/Src/stm32f7xx_it.c ****     I2C4->ICR = I2C_ICR_ADDRCF;
 312              		.loc 1 268 5 is_stmt 1 view .LVU47
 313              		.loc 1 268 15 is_stmt 0 view .LVU48
ARM GAS  C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s 			page 11


 314 005a 314B     		ldr	r3, .L30+24
 315              	.LVL5:
 316              		.loc 1 268 15 view .LVU49
 317 005c 0822     		movs	r2, #8
 318 005e DA61     		str	r2, [r3, #28]
 319              	.L16:
 269:Core/Src/stm32f7xx_it.c ****   }
 270:Core/Src/stm32f7xx_it.c ****    
 271:Core/Src/stm32f7xx_it.c **** 
 272:Core/Src/stm32f7xx_it.c **** }
 320              		.loc 1 272 1 view .LVU50
 321 0060 03B0     		add	sp, sp, #12
 322              	.LCFI3:
 323              		.cfi_remember_state
 324              		.cfi_def_cfa_offset 12
 325              		@ sp needed
 326 0062 30BD     		pop	{r4, r5, pc}
 327              	.LVL6:
 328              	.L28:
 329              	.LCFI4:
 330              		.cfi_restore_state
 223:Core/Src/stm32f7xx_it.c ****   }
 331              		.loc 1 223 24 is_stmt 1 discriminator 1 view .LVU51
 223:Core/Src/stm32f7xx_it.c ****   }
 332              		.loc 1 223 34 is_stmt 0 discriminator 1 view .LVU52
 333 0064 0021     		movs	r1, #0
 334 0066 2160     		str	r1, [r4]
 335 0068 F4E7     		b	.L18
 336              	.L17:
 225:Core/Src/stm32f7xx_it.c **** 
 337              		.loc 1 225 8 is_stmt 1 view .LVU53
 225:Core/Src/stm32f7xx_it.c **** 
 338              		.loc 1 225 11 is_stmt 0 view .LVU54
 339 006a 13F0040F 		tst	r3, #4
 340 006e 26D0     		beq	.L19
 341              	.LBB2:
 228:Core/Src/stm32f7xx_it.c ****     if(write_adress == -1){
 342              		.loc 1 228 5 is_stmt 1 view .LVU55
 228:Core/Src/stm32f7xx_it.c ****     if(write_adress == -1){
 343              		.loc 1 228 22 is_stmt 0 view .LVU56
 344 0070 2B4A     		ldr	r2, .L30+24
 345 0072 516A     		ldr	r1, [r2, #36]
 228:Core/Src/stm32f7xx_it.c ****     if(write_adress == -1){
 346              		.loc 1 228 13 view .LVU57
 347 0074 CCB2     		uxtb	r4, r1
 348              	.LVL7:
 229:Core/Src/stm32f7xx_it.c ****         if(a & 1){
 349              		.loc 1 229 5 is_stmt 1 view .LVU58
 229:Core/Src/stm32f7xx_it.c ****         if(a & 1){
 350              		.loc 1 229 21 is_stmt 0 view .LVU59
 351 0076 274A     		ldr	r2, .L30+12
 352 0078 1268     		ldr	r2, [r2]
 229:Core/Src/stm32f7xx_it.c ****         if(a & 1){
 353              		.loc 1 229 7 view .LVU60
 354 007a B2F1FF3F 		cmp	r2, #-1
 355 007e 15D0     		beq	.L29
 238:Core/Src/stm32f7xx_it.c ****     }
ARM GAS  C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s 			page 12


 356              		.loc 1 238 7 is_stmt 1 view .LVU61
 238:Core/Src/stm32f7xx_it.c ****     }
 357              		.loc 1 238 26 is_stmt 0 view .LVU62
 358 0080 82F00102 		eor	r2, r2, #1
 238:Core/Src/stm32f7xx_it.c ****     }
 359              		.loc 1 238 40 view .LVU63
 360 0084 2149     		ldr	r1, .L30+4
 361 0086 0868     		ldr	r0, [r1]
 362 0088 451C     		adds	r5, r0, #1
 363 008a 0D60     		str	r5, [r1]
 238:Core/Src/stm32f7xx_it.c ****     }
 364              		.loc 1 238 45 view .LVU64
 365 008c 2549     		ldr	r1, .L30+28
 366 008e 01EB8202 		add	r2, r1, r2, lsl #2
 367 0092 1454     		strb	r4, [r2, r0]
 368              	.L22:
 240:Core/Src/stm32f7xx_it.c ****     
 369              		.loc 1 240 5 is_stmt 1 view .LVU65
 240:Core/Src/stm32f7xx_it.c ****     
 370              		.loc 1 240 18 is_stmt 0 view .LVU66
 371 0094 1D4A     		ldr	r2, .L30+4
 372 0096 1268     		ldr	r2, [r2]
 240:Core/Src/stm32f7xx_it.c ****     
 373              		.loc 1 240 7 view .LVU67
 374 0098 042A     		cmp	r2, #4
 375 009a DBD1     		bne	.L18
 240:Core/Src/stm32f7xx_it.c ****     
 376              		.loc 1 240 24 is_stmt 1 discriminator 1 view .LVU68
 240:Core/Src/stm32f7xx_it.c ****     
 377              		.loc 1 240 37 is_stmt 0 discriminator 1 view .LVU69
 378 009c 1D4A     		ldr	r2, .L30+12
 379 009e 4FF0FF31 		mov	r1, #-1
 380 00a2 1160     		str	r1, [r2]
 240:Core/Src/stm32f7xx_it.c ****     
 381              		.loc 1 240 53 discriminator 1 view .LVU70
 382 00a4 194A     		ldr	r2, .L30+4
 383 00a6 0021     		movs	r1, #0
 384 00a8 1160     		str	r1, [r2]
 385 00aa D3E7     		b	.L18
 386              	.L29:
 230:Core/Src/stm32f7xx_it.c ****           write_adress = a;
 387              		.loc 1 230 9 is_stmt 1 view .LVU71
 230:Core/Src/stm32f7xx_it.c ****           write_adress = a;
 388              		.loc 1 230 11 is_stmt 0 view .LVU72
 389 00ac 11F0010F 		tst	r1, #1
 390 00b0 02D0     		beq	.L21
 231:Core/Src/stm32f7xx_it.c ****         }
 391              		.loc 1 231 11 is_stmt 1 view .LVU73
 231:Core/Src/stm32f7xx_it.c ****         }
 392              		.loc 1 231 24 is_stmt 0 view .LVU74
 393 00b2 1849     		ldr	r1, .L30+12
 394 00b4 0C60     		str	r4, [r1]
 395 00b6 EDE7     		b	.L22
 396              	.L21:
 234:Core/Src/stm32f7xx_it.c ****         }
 397              		.loc 1 234 11 is_stmt 1 view .LVU75
 234:Core/Src/stm32f7xx_it.c ****         }
ARM GAS  C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s 			page 13


 398              		.loc 1 234 23 is_stmt 0 view .LVU76
 399 00b8 1549     		ldr	r1, .L30+8
 400 00ba 0C60     		str	r4, [r1]
 401 00bc EAE7     		b	.L22
 402              	.LVL8:
 403              	.L19:
 234:Core/Src/stm32f7xx_it.c ****         }
 404              		.loc 1 234 23 view .LVU77
 405              	.LBE2:
 245:Core/Src/stm32f7xx_it.c ****   {
 406              		.loc 1 245 8 is_stmt 1 view .LVU78
 245:Core/Src/stm32f7xx_it.c ****   {
 407              		.loc 1 245 11 is_stmt 0 view .LVU79
 408 00be 13F0200F 		tst	r3, #32
 409 00c2 13D0     		beq	.L23
 247:Core/Src/stm32f7xx_it.c ****     //HAL_UART_Transmit(&huart2, (uint8_t*) "STOP\n", 6, 100);
 410              		.loc 1 247 5 is_stmt 1 view .LVU80
 247:Core/Src/stm32f7xx_it.c ****     //HAL_UART_Transmit(&huart2, (uint8_t*) "STOP\n", 6, 100);
 411              		.loc 1 247 18 is_stmt 0 view .LVU81
 412 00c4 114A     		ldr	r2, .L30+4
 413 00c6 1268     		ldr	r2, [r2]
 247:Core/Src/stm32f7xx_it.c ****     //HAL_UART_Transmit(&huart2, (uint8_t*) "STOP\n", 6, 100);
 414              		.loc 1 247 7 view .LVU82
 415 00c8 42B1     		cbz	r2, .L24
 247:Core/Src/stm32f7xx_it.c ****     //HAL_UART_Transmit(&huart2, (uint8_t*) "STOP\n", 6, 100);
 416              		.loc 1 247 24 is_stmt 1 discriminator 1 view .LVU83
 247:Core/Src/stm32f7xx_it.c ****     //HAL_UART_Transmit(&huart2, (uint8_t*) "STOP\n", 6, 100);
 417              		.loc 1 247 51 is_stmt 0 discriminator 1 view .LVU84
 418 00ca 4FF0FF32 		mov	r2, #-1
 419 00ce 1049     		ldr	r1, .L30+8
 420 00d0 0A60     		str	r2, [r1]
 247:Core/Src/stm32f7xx_it.c ****     //HAL_UART_Transmit(&huart2, (uint8_t*) "STOP\n", 6, 100);
 421              		.loc 1 247 37 discriminator 1 view .LVU85
 422 00d2 1049     		ldr	r1, .L30+12
 423 00d4 0A60     		str	r2, [r1]
 247:Core/Src/stm32f7xx_it.c ****     //HAL_UART_Transmit(&huart2, (uint8_t*) "STOP\n", 6, 100);
 424              		.loc 1 247 67 discriminator 1 view .LVU86
 425 00d6 0D4A     		ldr	r2, .L30+4
 426 00d8 0021     		movs	r1, #0
 427 00da 1160     		str	r1, [r2]
 428              	.L24:
 249:Core/Src/stm32f7xx_it.c ****     I2C4->ICR = I2C_ICR_STOPCF;
 429              		.loc 1 249 5 is_stmt 1 view .LVU87
 249:Core/Src/stm32f7xx_it.c ****     I2C4->ICR = I2C_ICR_STOPCF;
 430              		.loc 1 249 15 is_stmt 0 view .LVU88
 431 00dc 104A     		ldr	r2, .L30+24
 432 00de 9169     		ldr	r1, [r2, #24]
 433 00e0 41F00101 		orr	r1, r1, #1
 434 00e4 9161     		str	r1, [r2, #24]
 250:Core/Src/stm32f7xx_it.c ****   }
 435              		.loc 1 250 5 is_stmt 1 view .LVU89
 250:Core/Src/stm32f7xx_it.c ****   }
 436              		.loc 1 250 15 is_stmt 0 view .LVU90
 437 00e6 2021     		movs	r1, #32
 438 00e8 D161     		str	r1, [r2, #28]
 439 00ea B3E7     		b	.L18
 440              	.L23:
ARM GAS  C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s 			page 14


 252:Core/Src/stm32f7xx_it.c ****   {
 441              		.loc 1 252 8 is_stmt 1 view .LVU91
 252:Core/Src/stm32f7xx_it.c ****   {
 442              		.loc 1 252 11 is_stmt 0 view .LVU92
 443 00ec 13F0100F 		tst	r3, #16
 444 00f0 03D0     		beq	.L25
 255:Core/Src/stm32f7xx_it.c ****   }
 445              		.loc 1 255 5 is_stmt 1 view .LVU93
 255:Core/Src/stm32f7xx_it.c ****   }
 446              		.loc 1 255 15 is_stmt 0 view .LVU94
 447 00f2 0B4A     		ldr	r2, .L30+24
 448 00f4 1021     		movs	r1, #16
 449 00f6 D161     		str	r1, [r2, #28]
 450 00f8 ACE7     		b	.L18
 451              	.L25:
 257:Core/Src/stm32f7xx_it.c ****   {
 452              		.loc 1 257 8 is_stmt 1 view .LVU95
 257:Core/Src/stm32f7xx_it.c ****   {
 453              		.loc 1 257 11 is_stmt 0 view .LVU96
 454 00fa 13F0080F 		tst	r3, #8
 455 00fe A9D0     		beq	.L18
 261:Core/Src/stm32f7xx_it.c ****   }
 456              		.loc 1 261 5 is_stmt 1 view .LVU97
 261:Core/Src/stm32f7xx_it.c ****   }
 457              		.loc 1 261 15 is_stmt 0 view .LVU98
 458 0100 074A     		ldr	r2, .L30+24
 459 0102 0821     		movs	r1, #8
 460 0104 D161     		str	r1, [r2, #28]
 461 0106 A5E7     		b	.L18
 462              	.L31:
 463              		.align	2
 464              	.L30:
 465 0108 00000000 		.word	.LANCHOR2
 466 010c 00000000 		.word	.LANCHOR3
 467 0110 00000000 		.word	.LANCHOR0
 468 0114 00000000 		.word	.LANCHOR1
 469 0118 00000000 		.word	.LC0
 470 011c 00000000 		.word	huart2
 471 0120 00600040 		.word	1073766400
 472 0124 00000000 		.word	i2cReg
 473              		.cfi_endproc
 474              	.LFE153:
 476              		.global	state
 477              		.global	index_i2c
 478              		.global	read_adress
 479              		.global	write_adress
 480              		.global	buffer
 481              		.section	.bss.buffer,"aw",%nobits
 482              		.align	2
 483              		.set	.LANCHOR2,. + 0
 486              	buffer:
 487 0000 00000000 		.space	50
 487      00000000 
 487      00000000 
 487      00000000 
 487      00000000 
 488              		.section	.bss.index_i2c,"aw",%nobits
ARM GAS  C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s 			page 15


 489              		.align	2
 490              		.set	.LANCHOR3,. + 0
 493              	index_i2c:
 494 0000 00000000 		.space	4
 495              		.section	.bss.state,"aw",%nobits
 496              		.align	2
 499              	state:
 500 0000 00000000 		.space	4
 501              		.section	.data.read_adress,"aw"
 502              		.align	2
 503              		.set	.LANCHOR0,. + 0
 506              	read_adress:
 507 0000 FFFFFFFF 		.word	-1
 508              		.section	.data.write_adress,"aw"
 509              		.align	2
 510              		.set	.LANCHOR1,. + 0
 513              	write_adress:
 514 0000 FFFFFFFF 		.word	-1
 515              		.text
 516              	.Letext0:
 517              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\inc
 518              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\inc
 519              		.file 4 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 520              		.file 5 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 521              		.file 6 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 522              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 523              		.file 8 "Core/Inc/usart.h"
 524              		.file 9 "Core/drogui/include/utils.h"
 525              		.file 10 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\in
 526              		.file 11 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\in
 527              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
ARM GAS  C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s 			page 16


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f7xx_it.c
C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s:18     .text.NMI_Handler:00000000 $t
C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s:26     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s:44     .text.HardFault_Handler:00000000 $t
C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s:51     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s:68     .text.MemManage_Handler:00000000 $t
C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s:75     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s:92     .text.BusFault_Handler:00000000 $t
C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s:99     .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s:116    .text.UsageFault_Handler:00000000 $t
C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s:123    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s:140    .text.SVC_Handler:00000000 $t
C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s:147    .text.SVC_Handler:00000000 SVC_Handler
C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s:160    .text.DebugMon_Handler:00000000 $t
C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s:167    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s:180    .text.PendSV_Handler:00000000 $t
C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s:187    .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s:200    .text.SysTick_Handler:00000000 $t
C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s:207    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s:227    .rodata.I2C4_EV_IRQHandler.str1.4:00000000 $d
C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s:231    .text.I2C4_EV_IRQHandler:00000000 $t
C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s:238    .text.I2C4_EV_IRQHandler:00000000 I2C4_EV_IRQHandler
C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s:465    .text.I2C4_EV_IRQHandler:00000108 $d
C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s:499    .bss.state:00000000 state
C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s:493    .bss.index_i2c:00000000 index_i2c
C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s:506    .data.read_adress:00000000 read_adress
C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s:513    .data.write_adress:00000000 write_adress
C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s:486    .bss.buffer:00000000 buffer
C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s:482    .bss.buffer:00000000 $d
C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s:489    .bss.index_i2c:00000000 $d
C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s:496    .bss.state:00000000 $d
C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s:502    .data.read_adress:00000000 $d
C:\Users\GUILLE~1\AppData\Local\Temp\ccAHrM4f.s:509    .data.write_adress:00000000 $d

UNDEFINED SYMBOLS
HAL_IncTick
sprintf
strlen
HAL_UART_Transmit
huart2
i2cReg
