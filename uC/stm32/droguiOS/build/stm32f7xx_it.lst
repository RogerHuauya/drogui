ARM GAS  C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f7xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-sp-d16
  26              	NMI_Handler:
  27              	.LFB249:
  28              		.file 1 "Core/Src/stm32f7xx_it.c"
   1:Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f7xx_it.c **** /**
   3:Core/Src/stm32f7xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f7xx_it.c ****   * @file    stm32f7xx_it.c
   5:Core/Src/stm32f7xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f7xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f7xx_it.c ****   * @attention
   8:Core/Src/stm32f7xx_it.c ****   *
   9:Core/Src/stm32f7xx_it.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/stm32f7xx_it.c ****   * All rights reserved.</center></h2>
  11:Core/Src/stm32f7xx_it.c ****   *
  12:Core/Src/stm32f7xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/stm32f7xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/stm32f7xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/stm32f7xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/stm32f7xx_it.c ****   *
  17:Core/Src/stm32f7xx_it.c ****   ******************************************************************************
  18:Core/Src/stm32f7xx_it.c ****   */
  19:Core/Src/stm32f7xx_it.c **** /* USER CODE END Header */
  20:Core/Src/stm32f7xx_it.c **** 
  21:Core/Src/stm32f7xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32f7xx_it.c **** #include "main.h"
  23:Core/Src/stm32f7xx_it.c **** #include "stm32f7xx_it.h"
  24:Core/Src/stm32f7xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/stm32f7xx_it.c **** #include "usart.h"
  27:Core/Src/stm32f7xx_it.c **** #include <stdio.h>
  28:Core/Src/stm32f7xx_it.c **** #include <string.h>
  29:Core/Src/stm32f7xx_it.c **** #include "utils.h"
  30:Core/Src/stm32f7xx_it.c **** #include "task.h"
ARM GAS  C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s 			page 2


  31:Core/Src/stm32f7xx_it.c **** #include "serial.h"
  32:Core/Src/stm32f7xx_it.c **** /* USER CODE END Includes */
  33:Core/Src/stm32f7xx_it.c **** 
  34:Core/Src/stm32f7xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  35:Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN TD */
  36:Core/Src/stm32f7xx_it.c **** 
  37:Core/Src/stm32f7xx_it.c **** /* USER CODE END TD */
  38:Core/Src/stm32f7xx_it.c **** 
  39:Core/Src/stm32f7xx_it.c **** /* Private define ------------------------------------------------------------*/
  40:Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN PD */
  41:Core/Src/stm32f7xx_it.c **** 
  42:Core/Src/stm32f7xx_it.c **** /* USER CODE END PD */
  43:Core/Src/stm32f7xx_it.c **** 
  44:Core/Src/stm32f7xx_it.c **** /* Private macro -------------------------------------------------------------*/
  45:Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN PM */
  46:Core/Src/stm32f7xx_it.c **** 
  47:Core/Src/stm32f7xx_it.c **** /* USER CODE END PM */
  48:Core/Src/stm32f7xx_it.c **** 
  49:Core/Src/stm32f7xx_it.c **** /* Private variables ---------------------------------------------------------*/
  50:Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN PV */
  51:Core/Src/stm32f7xx_it.c **** int write_adress = -1, read_adress = -1;
  52:Core/Src/stm32f7xx_it.c **** int index_i2c = 0;
  53:Core/Src/stm32f7xx_it.c **** /* USER CODE END PV */
  54:Core/Src/stm32f7xx_it.c **** 
  55:Core/Src/stm32f7xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  56:Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN PFP */
  57:Core/Src/stm32f7xx_it.c **** 
  58:Core/Src/stm32f7xx_it.c **** /* USER CODE END PFP */
  59:Core/Src/stm32f7xx_it.c **** 
  60:Core/Src/stm32f7xx_it.c **** /* Private user code ---------------------------------------------------------*/
  61:Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN 0 */
  62:Core/Src/stm32f7xx_it.c **** 
  63:Core/Src/stm32f7xx_it.c **** /* USER CODE END 0 */
  64:Core/Src/stm32f7xx_it.c **** 
  65:Core/Src/stm32f7xx_it.c **** /* External variables --------------------------------------------------------*/
  66:Core/Src/stm32f7xx_it.c **** extern I2C_HandleTypeDef hi2c4;
  67:Core/Src/stm32f7xx_it.c **** extern UART_HandleTypeDef huart4;
  68:Core/Src/stm32f7xx_it.c **** extern UART_HandleTypeDef huart5;
  69:Core/Src/stm32f7xx_it.c **** extern UART_HandleTypeDef huart2;
  70:Core/Src/stm32f7xx_it.c **** extern UART_HandleTypeDef huart3;
  71:Core/Src/stm32f7xx_it.c **** /* USER CODE BEGIN EV */
  72:Core/Src/stm32f7xx_it.c **** 
  73:Core/Src/stm32f7xx_it.c **** /* USER CODE END EV */
  74:Core/Src/stm32f7xx_it.c **** 
  75:Core/Src/stm32f7xx_it.c **** /******************************************************************************/
  76:Core/Src/stm32f7xx_it.c **** /*           Cortex-M7 Processor Interruption and Exception Handlers          */
  77:Core/Src/stm32f7xx_it.c **** /******************************************************************************/
  78:Core/Src/stm32f7xx_it.c **** /**
  79:Core/Src/stm32f7xx_it.c ****   * @brief This function handles Non maskable interrupt.
  80:Core/Src/stm32f7xx_it.c ****   */
  81:Core/Src/stm32f7xx_it.c **** void NMI_Handler(void)
  82:Core/Src/stm32f7xx_it.c **** {
  29              		.loc 1 82 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s 			page 3


  34              		@ link register save eliminated.
  35              	.L2:
  83:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  84:Core/Src/stm32f7xx_it.c **** 
  85:Core/Src/stm32f7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  86:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  87:Core/Src/stm32f7xx_it.c ****   while (1)
  36              		.loc 1 87 3 discriminator 1 view .LVU1
  88:Core/Src/stm32f7xx_it.c ****   {
  89:Core/Src/stm32f7xx_it.c ****   }
  37              		.loc 1 89 3 discriminator 1 view .LVU2
  87:Core/Src/stm32f7xx_it.c ****   {
  38              		.loc 1 87 9 discriminator 1 view .LVU3
  39 0000 FEE7     		b	.L2
  40              		.cfi_endproc
  41              	.LFE249:
  43              		.section	.text.HardFault_Handler,"ax",%progbits
  44              		.align	1
  45              		.global	HardFault_Handler
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv5-sp-d16
  51              	HardFault_Handler:
  52              	.LFB250:
  90:Core/Src/stm32f7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  91:Core/Src/stm32f7xx_it.c **** }
  92:Core/Src/stm32f7xx_it.c **** 
  93:Core/Src/stm32f7xx_it.c **** /**
  94:Core/Src/stm32f7xx_it.c ****   * @brief This function handles Hard fault interrupt.
  95:Core/Src/stm32f7xx_it.c ****   */
  96:Core/Src/stm32f7xx_it.c **** void HardFault_Handler(void)
  97:Core/Src/stm32f7xx_it.c **** {
  53              		.loc 1 97 1 view -0
  54              		.cfi_startproc
  55              		@ Volatile: function does not return.
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
  59              	.L4:
  98:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  99:Core/Src/stm32f7xx_it.c **** 
 100:Core/Src/stm32f7xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
 101:Core/Src/stm32f7xx_it.c ****   while (1)
  60              		.loc 1 101 3 discriminator 1 view .LVU5
 102:Core/Src/stm32f7xx_it.c ****   {
 103:Core/Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
 104:Core/Src/stm32f7xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 105:Core/Src/stm32f7xx_it.c ****   }
  61              		.loc 1 105 3 discriminator 1 view .LVU6
 101:Core/Src/stm32f7xx_it.c ****   {
  62              		.loc 1 101 9 discriminator 1 view .LVU7
  63 0000 FEE7     		b	.L4
  64              		.cfi_endproc
  65              	.LFE250:
  67              		.section	.text.MemManage_Handler,"ax",%progbits
  68              		.align	1
ARM GAS  C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s 			page 4


  69              		.global	MemManage_Handler
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  73              		.fpu fpv5-sp-d16
  75              	MemManage_Handler:
  76              	.LFB251:
 106:Core/Src/stm32f7xx_it.c **** }
 107:Core/Src/stm32f7xx_it.c **** 
 108:Core/Src/stm32f7xx_it.c **** /**
 109:Core/Src/stm32f7xx_it.c ****   * @brief This function handles Memory management fault.
 110:Core/Src/stm32f7xx_it.c ****   */
 111:Core/Src/stm32f7xx_it.c **** void MemManage_Handler(void)
 112:Core/Src/stm32f7xx_it.c **** {
  77              		.loc 1 112 1 view -0
  78              		.cfi_startproc
  79              		@ Volatile: function does not return.
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  83              	.L6:
 113:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 114:Core/Src/stm32f7xx_it.c **** 
 115:Core/Src/stm32f7xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 116:Core/Src/stm32f7xx_it.c ****   while (1)
  84              		.loc 1 116 3 discriminator 1 view .LVU9
 117:Core/Src/stm32f7xx_it.c ****   {
 118:Core/Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 119:Core/Src/stm32f7xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 120:Core/Src/stm32f7xx_it.c ****   }
  85              		.loc 1 120 3 discriminator 1 view .LVU10
 116:Core/Src/stm32f7xx_it.c ****   {
  86              		.loc 1 116 9 discriminator 1 view .LVU11
  87 0000 FEE7     		b	.L6
  88              		.cfi_endproc
  89              	.LFE251:
  91              		.section	.text.BusFault_Handler,"ax",%progbits
  92              		.align	1
  93              		.global	BusFault_Handler
  94              		.syntax unified
  95              		.thumb
  96              		.thumb_func
  97              		.fpu fpv5-sp-d16
  99              	BusFault_Handler:
 100              	.LFB252:
 121:Core/Src/stm32f7xx_it.c **** }
 122:Core/Src/stm32f7xx_it.c **** 
 123:Core/Src/stm32f7xx_it.c **** /**
 124:Core/Src/stm32f7xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 125:Core/Src/stm32f7xx_it.c ****   */
 126:Core/Src/stm32f7xx_it.c **** void BusFault_Handler(void)
 127:Core/Src/stm32f7xx_it.c **** {
 101              		.loc 1 127 1 view -0
 102              		.cfi_startproc
 103              		@ Volatile: function does not return.
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s 			page 5


 106              		@ link register save eliminated.
 107              	.L8:
 128:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 129:Core/Src/stm32f7xx_it.c **** 
 130:Core/Src/stm32f7xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 131:Core/Src/stm32f7xx_it.c ****   while (1)
 108              		.loc 1 131 3 discriminator 1 view .LVU13
 132:Core/Src/stm32f7xx_it.c ****   {
 133:Core/Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 134:Core/Src/stm32f7xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 135:Core/Src/stm32f7xx_it.c ****   }
 109              		.loc 1 135 3 discriminator 1 view .LVU14
 131:Core/Src/stm32f7xx_it.c ****   {
 110              		.loc 1 131 9 discriminator 1 view .LVU15
 111 0000 FEE7     		b	.L8
 112              		.cfi_endproc
 113              	.LFE252:
 115              		.section	.text.UsageFault_Handler,"ax",%progbits
 116              		.align	1
 117              		.global	UsageFault_Handler
 118              		.syntax unified
 119              		.thumb
 120              		.thumb_func
 121              		.fpu fpv5-sp-d16
 123              	UsageFault_Handler:
 124              	.LFB253:
 136:Core/Src/stm32f7xx_it.c **** }
 137:Core/Src/stm32f7xx_it.c **** 
 138:Core/Src/stm32f7xx_it.c **** /**
 139:Core/Src/stm32f7xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 140:Core/Src/stm32f7xx_it.c ****   */
 141:Core/Src/stm32f7xx_it.c **** void UsageFault_Handler(void)
 142:Core/Src/stm32f7xx_it.c **** {
 125              		.loc 1 142 1 view -0
 126              		.cfi_startproc
 127              		@ Volatile: function does not return.
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              		@ link register save eliminated.
 131              	.L10:
 143:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 144:Core/Src/stm32f7xx_it.c **** 
 145:Core/Src/stm32f7xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 146:Core/Src/stm32f7xx_it.c ****   while (1)
 132              		.loc 1 146 3 discriminator 1 view .LVU17
 147:Core/Src/stm32f7xx_it.c ****   {
 148:Core/Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 149:Core/Src/stm32f7xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 150:Core/Src/stm32f7xx_it.c ****   }
 133              		.loc 1 150 3 discriminator 1 view .LVU18
 146:Core/Src/stm32f7xx_it.c ****   {
 134              		.loc 1 146 9 discriminator 1 view .LVU19
 135 0000 FEE7     		b	.L10
 136              		.cfi_endproc
 137              	.LFE253:
 139              		.section	.text.SVC_Handler,"ax",%progbits
 140              		.align	1
ARM GAS  C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s 			page 6


 141              		.global	SVC_Handler
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 145              		.fpu fpv5-sp-d16
 147              	SVC_Handler:
 148              	.LFB254:
 151:Core/Src/stm32f7xx_it.c **** }
 152:Core/Src/stm32f7xx_it.c **** 
 153:Core/Src/stm32f7xx_it.c **** /**
 154:Core/Src/stm32f7xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 155:Core/Src/stm32f7xx_it.c ****   */
 156:Core/Src/stm32f7xx_it.c **** void SVC_Handler(void)
 157:Core/Src/stm32f7xx_it.c **** {
 149              		.loc 1 157 1 view -0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		@ link register save eliminated.
 158:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 159:Core/Src/stm32f7xx_it.c **** 
 160:Core/Src/stm32f7xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 161:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 162:Core/Src/stm32f7xx_it.c **** 
 163:Core/Src/stm32f7xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 164:Core/Src/stm32f7xx_it.c **** }
 154              		.loc 1 164 1 view .LVU21
 155 0000 7047     		bx	lr
 156              		.cfi_endproc
 157              	.LFE254:
 159              		.section	.text.DebugMon_Handler,"ax",%progbits
 160              		.align	1
 161              		.global	DebugMon_Handler
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu fpv5-sp-d16
 167              	DebugMon_Handler:
 168              	.LFB255:
 165:Core/Src/stm32f7xx_it.c **** 
 166:Core/Src/stm32f7xx_it.c **** /**
 167:Core/Src/stm32f7xx_it.c ****   * @brief This function handles Debug monitor.
 168:Core/Src/stm32f7xx_it.c ****   */
 169:Core/Src/stm32f7xx_it.c **** void DebugMon_Handler(void)
 170:Core/Src/stm32f7xx_it.c **** {
 169              		.loc 1 170 1 view -0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173              		@ link register save eliminated.
 171:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 172:Core/Src/stm32f7xx_it.c **** 
 173:Core/Src/stm32f7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 174:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 175:Core/Src/stm32f7xx_it.c **** 
 176:Core/Src/stm32f7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 177:Core/Src/stm32f7xx_it.c **** }
ARM GAS  C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s 			page 7


 174              		.loc 1 177 1 view .LVU23
 175 0000 7047     		bx	lr
 176              		.cfi_endproc
 177              	.LFE255:
 179              		.section	.text.PendSV_Handler,"ax",%progbits
 180              		.align	1
 181              		.global	PendSV_Handler
 182              		.syntax unified
 183              		.thumb
 184              		.thumb_func
 185              		.fpu fpv5-sp-d16
 187              	PendSV_Handler:
 188              	.LFB256:
 178:Core/Src/stm32f7xx_it.c **** 
 179:Core/Src/stm32f7xx_it.c **** /**
 180:Core/Src/stm32f7xx_it.c ****   * @brief This function handles Pendable request for system service.
 181:Core/Src/stm32f7xx_it.c ****   */
 182:Core/Src/stm32f7xx_it.c **** void PendSV_Handler(void)
 183:Core/Src/stm32f7xx_it.c **** {
 189              		.loc 1 183 1 view -0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              		@ link register save eliminated.
 184:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 185:Core/Src/stm32f7xx_it.c **** 
 186:Core/Src/stm32f7xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 187:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 188:Core/Src/stm32f7xx_it.c **** 
 189:Core/Src/stm32f7xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 190:Core/Src/stm32f7xx_it.c **** }
 194              		.loc 1 190 1 view .LVU25
 195 0000 7047     		bx	lr
 196              		.cfi_endproc
 197              	.LFE256:
 199              		.section	.text.SysTick_Handler,"ax",%progbits
 200              		.align	1
 201              		.global	SysTick_Handler
 202              		.syntax unified
 203              		.thumb
 204              		.thumb_func
 205              		.fpu fpv5-sp-d16
 207              	SysTick_Handler:
 208              	.LFB257:
 191:Core/Src/stm32f7xx_it.c **** 
 192:Core/Src/stm32f7xx_it.c **** /**
 193:Core/Src/stm32f7xx_it.c ****   * @brief This function handles System tick timer.
 194:Core/Src/stm32f7xx_it.c ****   */
 195:Core/Src/stm32f7xx_it.c **** void SysTick_Handler(void)
 196:Core/Src/stm32f7xx_it.c **** {
 209              		.loc 1 196 1 view -0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213 0000 08B5     		push	{r3, lr}
 214              	.LCFI0:
 215              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s 			page 8


 216              		.cfi_offset 3, -8
 217              		.cfi_offset 14, -4
 197:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 198:Core/Src/stm32f7xx_it.c **** 
 199:Core/Src/stm32f7xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 200:Core/Src/stm32f7xx_it.c ****   HAL_IncTick();
 218              		.loc 1 200 3 view .LVU27
 219 0002 FFF7FEFF 		bl	HAL_IncTick
 220              	.LVL0:
 201:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 202:Core/Src/stm32f7xx_it.c **** 
 203:Core/Src/stm32f7xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 204:Core/Src/stm32f7xx_it.c **** }
 221              		.loc 1 204 1 is_stmt 0 view .LVU28
 222 0006 08BD     		pop	{r3, pc}
 223              		.cfi_endproc
 224              	.LFE257:
 226              		.section	.text.USART2_IRQHandler,"ax",%progbits
 227              		.align	1
 228              		.global	USART2_IRQHandler
 229              		.syntax unified
 230              		.thumb
 231              		.thumb_func
 232              		.fpu fpv5-sp-d16
 234              	USART2_IRQHandler:
 235              	.LFB258:
 205:Core/Src/stm32f7xx_it.c **** 
 206:Core/Src/stm32f7xx_it.c **** /******************************************************************************/
 207:Core/Src/stm32f7xx_it.c **** /* STM32F7xx Peripheral Interrupt Handlers                                    */
 208:Core/Src/stm32f7xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 209:Core/Src/stm32f7xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 210:Core/Src/stm32f7xx_it.c **** /* please refer to the startup file (startup_stm32f7xx.s).                    */
 211:Core/Src/stm32f7xx_it.c **** /******************************************************************************/
 212:Core/Src/stm32f7xx_it.c **** 
 213:Core/Src/stm32f7xx_it.c **** /**
 214:Core/Src/stm32f7xx_it.c ****   * @brief This function handles USART2 global interrupt.
 215:Core/Src/stm32f7xx_it.c ****   */
 216:Core/Src/stm32f7xx_it.c **** void USART2_IRQHandler(void)
 217:Core/Src/stm32f7xx_it.c **** {
 236              		.loc 1 217 1 is_stmt 1 view -0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 0
 239              		@ frame_needed = 0, uses_anonymous_args = 0
 240              		@ link register save eliminated.
 218:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 0 */
 219:Core/Src/stm32f7xx_it.c ****   unsigned long isr = USART2->ISR;
 241              		.loc 1 219 3 view .LVU30
 242              		.loc 1 219 17 is_stmt 0 view .LVU31
 243 0000 1C4B     		ldr	r3, .L21
 244 0002 DB69     		ldr	r3, [r3, #28]
 245              	.LVL1:
 220:Core/Src/stm32f7xx_it.c **** 	if(isr & USART_ISR_RXNE){
 246              		.loc 1 220 2 is_stmt 1 view .LVU32
 247              		.loc 1 220 4 is_stmt 0 view .LVU33
 248 0004 13F0200F 		tst	r3, #32
 249 0008 12D0     		beq	.L17
 221:Core/Src/stm32f7xx_it.c **** 
ARM GAS  C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s 			page 9


 222:Core/Src/stm32f7xx_it.c ****     serial2.rcv_buff[serial2.rcv_head++] = USART2->RDR;
 250              		.loc 1 222 5 is_stmt 1 view .LVU34
 251              		.loc 1 222 50 is_stmt 0 view .LVU35
 252 000a 1A4B     		ldr	r3, .L21
 253              	.LVL2:
 254              		.loc 1 222 50 view .LVU36
 255 000c 586A     		ldr	r0, [r3, #36]
 256              		.loc 1 222 29 view .LVU37
 257 000e 1A4B     		ldr	r3, .L21+4
 258 0010 93F82C21 		ldrb	r2, [r3, #300]	@ zero_extendqisi2
 259              		.loc 1 222 38 view .LVU38
 260 0014 511C     		adds	r1, r2, #1
 261 0016 C9B2     		uxtb	r1, r1
 262 0018 83F82C11 		strb	r1, [r3, #300]
 263              		.loc 1 222 42 view .LVU39
 264 001c 9854     		strb	r0, [r3, r2]
 223:Core/Src/stm32f7xx_it.c ****     serial2.rcv_head %= SER_BUFF_SZ;
 265              		.loc 1 223 5 is_stmt 1 view .LVU40
 224:Core/Src/stm32f7xx_it.c ****     serial2.rcv_tail += (serial2.rcv_head == serial2.rcv_tail);
 266              		.loc 1 224 5 view .LVU41
 267              		.loc 1 224 22 is_stmt 0 view .LVU42
 268 001e 93F82D21 		ldrb	r2, [r3, #301]	@ zero_extendqisi2
 269 0022 9142     		cmp	r1, r2
 270 0024 08BF     		it	eq
 271 0026 0132     		addeq	r2, r2, #1
 272 0028 D2B2     		uxtb	r2, r2
 273 002a 83F82D21 		strb	r2, [r3, #301]
 225:Core/Src/stm32f7xx_it.c ****     serial2.rcv_tail %= SER_BUFF_SZ;
 274              		.loc 1 225 5 is_stmt 1 view .LVU43
 275 002e 7047     		bx	lr
 276              	.LVL3:
 277              	.L17:
 226:Core/Src/stm32f7xx_it.c **** 	
 227:Core/Src/stm32f7xx_it.c **** 	}
 228:Core/Src/stm32f7xx_it.c **** 	else if(isr & USART_ISR_TXE){
 278              		.loc 1 228 7 view .LVU44
 279              		.loc 1 228 9 is_stmt 0 view .LVU45
 280 0030 13F0800F 		tst	r3, #128
 281 0034 16D0     		beq	.L16
 229:Core/Src/stm32f7xx_it.c ****     
 230:Core/Src/stm32f7xx_it.c **** 		if(serial2.snd_head != serial2.snd_tail){
 282              		.loc 1 230 3 is_stmt 1 view .LVU46
 283              		.loc 1 230 13 is_stmt 0 view .LVU47
 284 0036 104B     		ldr	r3, .L21+4
 285              	.LVL4:
 286              		.loc 1 230 13 view .LVU48
 287 0038 93F85A22 		ldrb	r2, [r3, #602]	@ zero_extendqisi2
 288              		.loc 1 230 33 view .LVU49
 289 003c 93F85B32 		ldrb	r3, [r3, #603]	@ zero_extendqisi2
 290              		.loc 1 230 5 view .LVU50
 291 0040 9A42     		cmp	r2, r3
 292 0042 08D0     		beq	.L19
 231:Core/Src/stm32f7xx_it.c **** 			USART2->TDR = serial2.snd_buff[serial2.snd_tail++];
 293              		.loc 1 231 4 is_stmt 1 view .LVU51
 294              		.loc 1 231 51 is_stmt 0 view .LVU52
 295 0044 0C4A     		ldr	r2, .L21+4
 296 0046 591C     		adds	r1, r3, #1
ARM GAS  C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s 			page 10


 297 0048 82F85B12 		strb	r1, [r2, #603]
 298              		.loc 1 231 34 view .LVU53
 299 004c 1344     		add	r3, r3, r2
 300 004e 93F82E21 		ldrb	r2, [r3, #302]	@ zero_extendqisi2
 301              		.loc 1 231 16 view .LVU54
 302 0052 084B     		ldr	r3, .L21
 303 0054 9A62     		str	r2, [r3, #40]
 232:Core/Src/stm32f7xx_it.c **** 			serial2.snd_tail %= SER_BUFF_SZ;
 304              		.loc 1 232 4 is_stmt 1 view .LVU55
 305              	.L19:
 233:Core/Src/stm32f7xx_it.c **** 		}
 234:Core/Src/stm32f7xx_it.c **** 		if(serial2.snd_head == serial2.snd_tail){
 306              		.loc 1 234 3 view .LVU56
 307              		.loc 1 234 13 is_stmt 0 view .LVU57
 308 0056 084B     		ldr	r3, .L21+4
 309 0058 93F85A22 		ldrb	r2, [r3, #602]	@ zero_extendqisi2
 310              		.loc 1 234 33 view .LVU58
 311 005c 93F85B32 		ldrb	r3, [r3, #603]	@ zero_extendqisi2
 312              		.loc 1 234 5 view .LVU59
 313 0060 9A42     		cmp	r2, r3
 314 0062 00D0     		beq	.L20
 315              	.L16:
 235:Core/Src/stm32f7xx_it.c **** 			USART2->CR1  &= ~(USART_CR1_TXEIE);
 236:Core/Src/stm32f7xx_it.c **** 		}
 237:Core/Src/stm32f7xx_it.c **** 	}
 238:Core/Src/stm32f7xx_it.c ****   /* USER CODE END USART2_IRQn 0 */
 239:Core/Src/stm32f7xx_it.c ****   //HAL_UART_IRQHandler(&huart2);
 240:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 1 */
 241:Core/Src/stm32f7xx_it.c **** 
 242:Core/Src/stm32f7xx_it.c ****   /* USER CODE END USART2_IRQn 1 */
 243:Core/Src/stm32f7xx_it.c **** }
 316              		.loc 1 243 1 view .LVU60
 317 0064 7047     		bx	lr
 318              	.L20:
 235:Core/Src/stm32f7xx_it.c **** 			USART2->CR1  &= ~(USART_CR1_TXEIE);
 319              		.loc 1 235 4 is_stmt 1 view .LVU61
 235:Core/Src/stm32f7xx_it.c **** 			USART2->CR1  &= ~(USART_CR1_TXEIE);
 320              		.loc 1 235 17 is_stmt 0 view .LVU62
 321 0066 034A     		ldr	r2, .L21
 322 0068 1368     		ldr	r3, [r2]
 323 006a 23F08003 		bic	r3, r3, #128
 324 006e 1360     		str	r3, [r2]
 325              		.loc 1 243 1 view .LVU63
 326 0070 F8E7     		b	.L16
 327              	.L22:
 328 0072 00BF     		.align	2
 329              	.L21:
 330 0074 00440040 		.word	1073759232
 331 0078 00000000 		.word	serial2
 332              		.cfi_endproc
 333              	.LFE258:
 335              		.section	.text.USART3_IRQHandler,"ax",%progbits
 336              		.align	1
 337              		.global	USART3_IRQHandler
 338              		.syntax unified
 339              		.thumb
 340              		.thumb_func
ARM GAS  C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s 			page 11


 341              		.fpu fpv5-sp-d16
 343              	USART3_IRQHandler:
 344              	.LFB259:
 244:Core/Src/stm32f7xx_it.c **** 
 245:Core/Src/stm32f7xx_it.c **** /**
 246:Core/Src/stm32f7xx_it.c ****   * @brief This function handles USART3 global interrupt.
 247:Core/Src/stm32f7xx_it.c ****   */
 248:Core/Src/stm32f7xx_it.c **** void USART3_IRQHandler(void)
 249:Core/Src/stm32f7xx_it.c **** {
 345              		.loc 1 249 1 is_stmt 1 view -0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349              		@ link register save eliminated.
 250:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN USART3_IRQn 0 */
 251:Core/Src/stm32f7xx_it.c ****   unsigned long isr = USART3->ISR;
 350              		.loc 1 251 3 view .LVU65
 351              		.loc 1 251 17 is_stmt 0 view .LVU66
 352 0000 1C4B     		ldr	r3, .L28
 353 0002 DB69     		ldr	r3, [r3, #28]
 354              	.LVL5:
 252:Core/Src/stm32f7xx_it.c **** 	if(isr & USART_ISR_RXNE){
 355              		.loc 1 252 2 is_stmt 1 view .LVU67
 356              		.loc 1 252 4 is_stmt 0 view .LVU68
 357 0004 13F0200F 		tst	r3, #32
 358 0008 12D0     		beq	.L24
 253:Core/Src/stm32f7xx_it.c **** 
 254:Core/Src/stm32f7xx_it.c ****     serial3.rcv_buff[serial3.rcv_head++] = USART3->RDR;
 359              		.loc 1 254 5 is_stmt 1 view .LVU69
 360              		.loc 1 254 50 is_stmt 0 view .LVU70
 361 000a 1A4B     		ldr	r3, .L28
 362              	.LVL6:
 363              		.loc 1 254 50 view .LVU71
 364 000c 586A     		ldr	r0, [r3, #36]
 365              		.loc 1 254 29 view .LVU72
 366 000e 1A4B     		ldr	r3, .L28+4
 367 0010 93F82C21 		ldrb	r2, [r3, #300]	@ zero_extendqisi2
 368              		.loc 1 254 38 view .LVU73
 369 0014 511C     		adds	r1, r2, #1
 370 0016 C9B2     		uxtb	r1, r1
 371 0018 83F82C11 		strb	r1, [r3, #300]
 372              		.loc 1 254 42 view .LVU74
 373 001c 9854     		strb	r0, [r3, r2]
 255:Core/Src/stm32f7xx_it.c ****     serial3.rcv_head %= SER_BUFF_SZ;
 374              		.loc 1 255 5 is_stmt 1 view .LVU75
 256:Core/Src/stm32f7xx_it.c ****     serial3.rcv_tail += (serial3.rcv_head == serial3.rcv_tail);
 375              		.loc 1 256 5 view .LVU76
 376              		.loc 1 256 22 is_stmt 0 view .LVU77
 377 001e 93F82D21 		ldrb	r2, [r3, #301]	@ zero_extendqisi2
 378 0022 9142     		cmp	r1, r2
 379 0024 08BF     		it	eq
 380 0026 0132     		addeq	r2, r2, #1
 381 0028 D2B2     		uxtb	r2, r2
 382 002a 83F82D21 		strb	r2, [r3, #301]
 257:Core/Src/stm32f7xx_it.c ****     serial3.rcv_tail %= SER_BUFF_SZ;
 383              		.loc 1 257 5 is_stmt 1 view .LVU78
 384 002e 7047     		bx	lr
ARM GAS  C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s 			page 12


 385              	.LVL7:
 386              	.L24:
 258:Core/Src/stm32f7xx_it.c **** 	
 259:Core/Src/stm32f7xx_it.c **** 	}
 260:Core/Src/stm32f7xx_it.c **** 	else if(isr & USART_ISR_TXE){
 387              		.loc 1 260 7 view .LVU79
 388              		.loc 1 260 9 is_stmt 0 view .LVU80
 389 0030 13F0800F 		tst	r3, #128
 390 0034 16D0     		beq	.L23
 261:Core/Src/stm32f7xx_it.c ****     
 262:Core/Src/stm32f7xx_it.c **** 		if(serial3.snd_head != serial3.snd_tail){
 391              		.loc 1 262 3 is_stmt 1 view .LVU81
 392              		.loc 1 262 13 is_stmt 0 view .LVU82
 393 0036 104B     		ldr	r3, .L28+4
 394              	.LVL8:
 395              		.loc 1 262 13 view .LVU83
 396 0038 93F85A22 		ldrb	r2, [r3, #602]	@ zero_extendqisi2
 397              		.loc 1 262 33 view .LVU84
 398 003c 93F85B32 		ldrb	r3, [r3, #603]	@ zero_extendqisi2
 399              		.loc 1 262 5 view .LVU85
 400 0040 9A42     		cmp	r2, r3
 401 0042 08D0     		beq	.L26
 263:Core/Src/stm32f7xx_it.c **** 			USART3->TDR = serial3.snd_buff[serial3.snd_tail++];
 402              		.loc 1 263 4 is_stmt 1 view .LVU86
 403              		.loc 1 263 51 is_stmt 0 view .LVU87
 404 0044 0C4A     		ldr	r2, .L28+4
 405 0046 591C     		adds	r1, r3, #1
 406 0048 82F85B12 		strb	r1, [r2, #603]
 407              		.loc 1 263 34 view .LVU88
 408 004c 1344     		add	r3, r3, r2
 409 004e 93F82E21 		ldrb	r2, [r3, #302]	@ zero_extendqisi2
 410              		.loc 1 263 16 view .LVU89
 411 0052 084B     		ldr	r3, .L28
 412 0054 9A62     		str	r2, [r3, #40]
 264:Core/Src/stm32f7xx_it.c **** 			serial3.snd_tail %= SER_BUFF_SZ;
 413              		.loc 1 264 4 is_stmt 1 view .LVU90
 414              	.L26:
 265:Core/Src/stm32f7xx_it.c **** 		}
 266:Core/Src/stm32f7xx_it.c **** 		if(serial3.snd_head == serial3.snd_tail){
 415              		.loc 1 266 3 view .LVU91
 416              		.loc 1 266 13 is_stmt 0 view .LVU92
 417 0056 084B     		ldr	r3, .L28+4
 418 0058 93F85A22 		ldrb	r2, [r3, #602]	@ zero_extendqisi2
 419              		.loc 1 266 33 view .LVU93
 420 005c 93F85B32 		ldrb	r3, [r3, #603]	@ zero_extendqisi2
 421              		.loc 1 266 5 view .LVU94
 422 0060 9A42     		cmp	r2, r3
 423 0062 00D0     		beq	.L27
 424              	.L23:
 267:Core/Src/stm32f7xx_it.c **** 			USART3->CR1  &= ~(USART_CR1_TXEIE);
 268:Core/Src/stm32f7xx_it.c **** 		}
 269:Core/Src/stm32f7xx_it.c **** 	}
 270:Core/Src/stm32f7xx_it.c ****   /* USER CODE END USART3_IRQn 0 */
 271:Core/Src/stm32f7xx_it.c ****   //HAL_UART_IRQHandler(&huart3);
 272:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN USART3_IRQn 1 */
 273:Core/Src/stm32f7xx_it.c **** 
 274:Core/Src/stm32f7xx_it.c ****   /* USER CODE END USART3_IRQn 1 */
ARM GAS  C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s 			page 13


 275:Core/Src/stm32f7xx_it.c **** }
 425              		.loc 1 275 1 view .LVU95
 426 0064 7047     		bx	lr
 427              	.L27:
 267:Core/Src/stm32f7xx_it.c **** 			USART3->CR1  &= ~(USART_CR1_TXEIE);
 428              		.loc 1 267 4 is_stmt 1 view .LVU96
 267:Core/Src/stm32f7xx_it.c **** 			USART3->CR1  &= ~(USART_CR1_TXEIE);
 429              		.loc 1 267 17 is_stmt 0 view .LVU97
 430 0066 034A     		ldr	r2, .L28
 431 0068 1368     		ldr	r3, [r2]
 432 006a 23F08003 		bic	r3, r3, #128
 433 006e 1360     		str	r3, [r2]
 434              		.loc 1 275 1 view .LVU98
 435 0070 F8E7     		b	.L23
 436              	.L29:
 437 0072 00BF     		.align	2
 438              	.L28:
 439 0074 00480040 		.word	1073760256
 440 0078 00000000 		.word	serial3
 441              		.cfi_endproc
 442              	.LFE259:
 444              		.section	.text.UART4_IRQHandler,"ax",%progbits
 445              		.align	1
 446              		.global	UART4_IRQHandler
 447              		.syntax unified
 448              		.thumb
 449              		.thumb_func
 450              		.fpu fpv5-sp-d16
 452              	UART4_IRQHandler:
 453              	.LFB260:
 276:Core/Src/stm32f7xx_it.c **** 
 277:Core/Src/stm32f7xx_it.c **** /**
 278:Core/Src/stm32f7xx_it.c ****   * @brief This function handles UART4 global interrupt.
 279:Core/Src/stm32f7xx_it.c ****   */
 280:Core/Src/stm32f7xx_it.c **** void UART4_IRQHandler(void)
 281:Core/Src/stm32f7xx_it.c **** {
 454              		.loc 1 281 1 is_stmt 1 view -0
 455              		.cfi_startproc
 456              		@ args = 0, pretend = 0, frame = 0
 457              		@ frame_needed = 0, uses_anonymous_args = 0
 458              		@ link register save eliminated.
 282:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN UART4_IRQn 0 */
 283:Core/Src/stm32f7xx_it.c ****   unsigned long isr = UART4->ISR;
 459              		.loc 1 283 3 view .LVU100
 460              		.loc 1 283 17 is_stmt 0 view .LVU101
 461 0000 1C4B     		ldr	r3, .L35
 462 0002 DB69     		ldr	r3, [r3, #28]
 463              	.LVL9:
 284:Core/Src/stm32f7xx_it.c **** 	if(isr & USART_ISR_RXNE){
 464              		.loc 1 284 2 is_stmt 1 view .LVU102
 465              		.loc 1 284 4 is_stmt 0 view .LVU103
 466 0004 13F0200F 		tst	r3, #32
 467 0008 12D0     		beq	.L31
 285:Core/Src/stm32f7xx_it.c ****     
 286:Core/Src/stm32f7xx_it.c ****     serial4.rcv_buff[serial4.rcv_head++] = UART4->RDR;
 468              		.loc 1 286 5 is_stmt 1 view .LVU104
 469              		.loc 1 286 49 is_stmt 0 view .LVU105
ARM GAS  C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s 			page 14


 470 000a 1A4B     		ldr	r3, .L35
 471              	.LVL10:
 472              		.loc 1 286 49 view .LVU106
 473 000c 586A     		ldr	r0, [r3, #36]
 474              		.loc 1 286 29 view .LVU107
 475 000e 1A4B     		ldr	r3, .L35+4
 476 0010 93F82C21 		ldrb	r2, [r3, #300]	@ zero_extendqisi2
 477              		.loc 1 286 38 view .LVU108
 478 0014 511C     		adds	r1, r2, #1
 479 0016 C9B2     		uxtb	r1, r1
 480 0018 83F82C11 		strb	r1, [r3, #300]
 481              		.loc 1 286 42 view .LVU109
 482 001c 9854     		strb	r0, [r3, r2]
 287:Core/Src/stm32f7xx_it.c ****     serial4.rcv_head %= SER_BUFF_SZ;
 483              		.loc 1 287 5 is_stmt 1 view .LVU110
 288:Core/Src/stm32f7xx_it.c ****     serial4.rcv_tail += (serial4.rcv_head == serial4.rcv_tail);
 484              		.loc 1 288 5 view .LVU111
 485              		.loc 1 288 22 is_stmt 0 view .LVU112
 486 001e 93F82D21 		ldrb	r2, [r3, #301]	@ zero_extendqisi2
 487 0022 9142     		cmp	r1, r2
 488 0024 08BF     		it	eq
 489 0026 0132     		addeq	r2, r2, #1
 490 0028 D2B2     		uxtb	r2, r2
 491 002a 83F82D21 		strb	r2, [r3, #301]
 289:Core/Src/stm32f7xx_it.c ****     serial4.rcv_tail %= SER_BUFF_SZ;
 492              		.loc 1 289 5 is_stmt 1 view .LVU113
 493 002e 7047     		bx	lr
 494              	.LVL11:
 495              	.L31:
 290:Core/Src/stm32f7xx_it.c **** 	
 291:Core/Src/stm32f7xx_it.c **** 	}
 292:Core/Src/stm32f7xx_it.c **** 	else if(isr & USART_ISR_TXE){
 496              		.loc 1 292 7 view .LVU114
 497              		.loc 1 292 9 is_stmt 0 view .LVU115
 498 0030 13F0800F 		tst	r3, #128
 499 0034 16D0     		beq	.L30
 293:Core/Src/stm32f7xx_it.c ****     
 294:Core/Src/stm32f7xx_it.c **** 		if(serial4.snd_head != serial4.snd_tail){
 500              		.loc 1 294 3 is_stmt 1 view .LVU116
 501              		.loc 1 294 13 is_stmt 0 view .LVU117
 502 0036 104B     		ldr	r3, .L35+4
 503              	.LVL12:
 504              		.loc 1 294 13 view .LVU118
 505 0038 93F85A22 		ldrb	r2, [r3, #602]	@ zero_extendqisi2
 506              		.loc 1 294 33 view .LVU119
 507 003c 93F85B32 		ldrb	r3, [r3, #603]	@ zero_extendqisi2
 508              		.loc 1 294 5 view .LVU120
 509 0040 9A42     		cmp	r2, r3
 510 0042 08D0     		beq	.L33
 295:Core/Src/stm32f7xx_it.c **** 			UART4->TDR = serial4.snd_buff[serial4.snd_tail++];
 511              		.loc 1 295 4 is_stmt 1 view .LVU121
 512              		.loc 1 295 50 is_stmt 0 view .LVU122
 513 0044 0C4A     		ldr	r2, .L35+4
 514 0046 591C     		adds	r1, r3, #1
 515 0048 82F85B12 		strb	r1, [r2, #603]
 516              		.loc 1 295 33 view .LVU123
 517 004c 1344     		add	r3, r3, r2
ARM GAS  C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s 			page 15


 518 004e 93F82E21 		ldrb	r2, [r3, #302]	@ zero_extendqisi2
 519              		.loc 1 295 15 view .LVU124
 520 0052 084B     		ldr	r3, .L35
 521 0054 9A62     		str	r2, [r3, #40]
 296:Core/Src/stm32f7xx_it.c **** 			serial4.snd_tail %= SER_BUFF_SZ;
 522              		.loc 1 296 4 is_stmt 1 view .LVU125
 523              	.L33:
 297:Core/Src/stm32f7xx_it.c **** 		}
 298:Core/Src/stm32f7xx_it.c **** 		if(serial4.snd_head == serial4.snd_tail){
 524              		.loc 1 298 3 view .LVU126
 525              		.loc 1 298 13 is_stmt 0 view .LVU127
 526 0056 084B     		ldr	r3, .L35+4
 527 0058 93F85A22 		ldrb	r2, [r3, #602]	@ zero_extendqisi2
 528              		.loc 1 298 33 view .LVU128
 529 005c 93F85B32 		ldrb	r3, [r3, #603]	@ zero_extendqisi2
 530              		.loc 1 298 5 view .LVU129
 531 0060 9A42     		cmp	r2, r3
 532 0062 00D0     		beq	.L34
 533              	.L30:
 299:Core/Src/stm32f7xx_it.c **** 			UART4->CR1  &= ~(USART_CR1_TXEIE);
 300:Core/Src/stm32f7xx_it.c **** 		}
 301:Core/Src/stm32f7xx_it.c **** 	}
 302:Core/Src/stm32f7xx_it.c ****   /* USER CODE END UART4_IRQn 0 */
 303:Core/Src/stm32f7xx_it.c ****   //HAL_UART_IRQHandler(&huart4);
 304:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN UART4_IRQn 1 */
 305:Core/Src/stm32f7xx_it.c **** 
 306:Core/Src/stm32f7xx_it.c ****   /* USER CODE END UART4_IRQn 1 */
 307:Core/Src/stm32f7xx_it.c **** }
 534              		.loc 1 307 1 view .LVU130
 535 0064 7047     		bx	lr
 536              	.L34:
 299:Core/Src/stm32f7xx_it.c **** 			UART4->CR1  &= ~(USART_CR1_TXEIE);
 537              		.loc 1 299 4 is_stmt 1 view .LVU131
 299:Core/Src/stm32f7xx_it.c **** 			UART4->CR1  &= ~(USART_CR1_TXEIE);
 538              		.loc 1 299 16 is_stmt 0 view .LVU132
 539 0066 034A     		ldr	r2, .L35
 540 0068 1368     		ldr	r3, [r2]
 541 006a 23F08003 		bic	r3, r3, #128
 542 006e 1360     		str	r3, [r2]
 543              		.loc 1 307 1 view .LVU133
 544 0070 F8E7     		b	.L30
 545              	.L36:
 546 0072 00BF     		.align	2
 547              	.L35:
 548 0074 004C0040 		.word	1073761280
 549 0078 00000000 		.word	serial4
 550              		.cfi_endproc
 551              	.LFE260:
 553              		.section	.text.UART5_IRQHandler,"ax",%progbits
 554              		.align	1
 555              		.global	UART5_IRQHandler
 556              		.syntax unified
 557              		.thumb
 558              		.thumb_func
 559              		.fpu fpv5-sp-d16
 561              	UART5_IRQHandler:
 562              	.LFB261:
ARM GAS  C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s 			page 16


 308:Core/Src/stm32f7xx_it.c **** 
 309:Core/Src/stm32f7xx_it.c **** /**
 310:Core/Src/stm32f7xx_it.c ****   * @brief This function handles UART5 global interrupt.
 311:Core/Src/stm32f7xx_it.c ****   */
 312:Core/Src/stm32f7xx_it.c **** void UART5_IRQHandler(void)
 313:Core/Src/stm32f7xx_it.c **** {
 563              		.loc 1 313 1 is_stmt 1 view -0
 564              		.cfi_startproc
 565              		@ args = 0, pretend = 0, frame = 0
 566              		@ frame_needed = 0, uses_anonymous_args = 0
 567              		@ link register save eliminated.
 314:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN UART5_IRQn 0 */
 315:Core/Src/stm32f7xx_it.c ****   unsigned long isr = UART5->ISR;
 568              		.loc 1 315 3 view .LVU135
 569              		.loc 1 315 17 is_stmt 0 view .LVU136
 570 0000 1C4B     		ldr	r3, .L42
 571 0002 DB69     		ldr	r3, [r3, #28]
 572              	.LVL13:
 316:Core/Src/stm32f7xx_it.c **** 	if(isr & USART_ISR_RXNE){
 573              		.loc 1 316 2 is_stmt 1 view .LVU137
 574              		.loc 1 316 4 is_stmt 0 view .LVU138
 575 0004 13F0200F 		tst	r3, #32
 576 0008 12D0     		beq	.L38
 317:Core/Src/stm32f7xx_it.c ****     
 318:Core/Src/stm32f7xx_it.c ****     serial5.rcv_buff[serial5.rcv_head++] = UART5->RDR;
 577              		.loc 1 318 5 is_stmt 1 view .LVU139
 578              		.loc 1 318 49 is_stmt 0 view .LVU140
 579 000a 1A4B     		ldr	r3, .L42
 580              	.LVL14:
 581              		.loc 1 318 49 view .LVU141
 582 000c 586A     		ldr	r0, [r3, #36]
 583              		.loc 1 318 29 view .LVU142
 584 000e 1A4B     		ldr	r3, .L42+4
 585 0010 93F82C21 		ldrb	r2, [r3, #300]	@ zero_extendqisi2
 586              		.loc 1 318 38 view .LVU143
 587 0014 511C     		adds	r1, r2, #1
 588 0016 C9B2     		uxtb	r1, r1
 589 0018 83F82C11 		strb	r1, [r3, #300]
 590              		.loc 1 318 42 view .LVU144
 591 001c 9854     		strb	r0, [r3, r2]
 319:Core/Src/stm32f7xx_it.c ****     serial5.rcv_head %= SER_BUFF_SZ;
 592              		.loc 1 319 5 is_stmt 1 view .LVU145
 320:Core/Src/stm32f7xx_it.c ****     serial5.rcv_tail += (serial5.rcv_head == serial5.rcv_tail);
 593              		.loc 1 320 5 view .LVU146
 594              		.loc 1 320 22 is_stmt 0 view .LVU147
 595 001e 93F82D21 		ldrb	r2, [r3, #301]	@ zero_extendqisi2
 596 0022 9142     		cmp	r1, r2
 597 0024 08BF     		it	eq
 598 0026 0132     		addeq	r2, r2, #1
 599 0028 D2B2     		uxtb	r2, r2
 600 002a 83F82D21 		strb	r2, [r3, #301]
 321:Core/Src/stm32f7xx_it.c ****     serial5.rcv_tail %= SER_BUFF_SZ;
 601              		.loc 1 321 5 is_stmt 1 view .LVU148
 602 002e 7047     		bx	lr
 603              	.LVL15:
 604              	.L38:
 322:Core/Src/stm32f7xx_it.c **** 	
ARM GAS  C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s 			page 17


 323:Core/Src/stm32f7xx_it.c **** 	}
 324:Core/Src/stm32f7xx_it.c **** 	else if(isr & USART_ISR_TXE){
 605              		.loc 1 324 7 view .LVU149
 606              		.loc 1 324 9 is_stmt 0 view .LVU150
 607 0030 13F0800F 		tst	r3, #128
 608 0034 16D0     		beq	.L37
 325:Core/Src/stm32f7xx_it.c ****     
 326:Core/Src/stm32f7xx_it.c **** 		if(serial5.snd_head != serial5.snd_tail){
 609              		.loc 1 326 3 is_stmt 1 view .LVU151
 610              		.loc 1 326 13 is_stmt 0 view .LVU152
 611 0036 104B     		ldr	r3, .L42+4
 612              	.LVL16:
 613              		.loc 1 326 13 view .LVU153
 614 0038 93F85A22 		ldrb	r2, [r3, #602]	@ zero_extendqisi2
 615              		.loc 1 326 33 view .LVU154
 616 003c 93F85B32 		ldrb	r3, [r3, #603]	@ zero_extendqisi2
 617              		.loc 1 326 5 view .LVU155
 618 0040 9A42     		cmp	r2, r3
 619 0042 08D0     		beq	.L40
 327:Core/Src/stm32f7xx_it.c **** 			UART5->TDR = serial5.snd_buff[serial5.snd_tail++];
 620              		.loc 1 327 4 is_stmt 1 view .LVU156
 621              		.loc 1 327 50 is_stmt 0 view .LVU157
 622 0044 0C4A     		ldr	r2, .L42+4
 623 0046 591C     		adds	r1, r3, #1
 624 0048 82F85B12 		strb	r1, [r2, #603]
 625              		.loc 1 327 33 view .LVU158
 626 004c 1344     		add	r3, r3, r2
 627 004e 93F82E21 		ldrb	r2, [r3, #302]	@ zero_extendqisi2
 628              		.loc 1 327 15 view .LVU159
 629 0052 084B     		ldr	r3, .L42
 630 0054 9A62     		str	r2, [r3, #40]
 328:Core/Src/stm32f7xx_it.c **** 			serial5.snd_tail %= SER_BUFF_SZ;
 631              		.loc 1 328 4 is_stmt 1 view .LVU160
 632              	.L40:
 329:Core/Src/stm32f7xx_it.c **** 		}
 330:Core/Src/stm32f7xx_it.c **** 		if(serial5.snd_head == serial5.snd_tail){
 633              		.loc 1 330 3 view .LVU161
 634              		.loc 1 330 13 is_stmt 0 view .LVU162
 635 0056 084B     		ldr	r3, .L42+4
 636 0058 93F85A22 		ldrb	r2, [r3, #602]	@ zero_extendqisi2
 637              		.loc 1 330 33 view .LVU163
 638 005c 93F85B32 		ldrb	r3, [r3, #603]	@ zero_extendqisi2
 639              		.loc 1 330 5 view .LVU164
 640 0060 9A42     		cmp	r2, r3
 641 0062 00D0     		beq	.L41
 642              	.L37:
 331:Core/Src/stm32f7xx_it.c **** 			UART5->CR1  &= ~(USART_CR1_TXEIE);
 332:Core/Src/stm32f7xx_it.c **** 		}
 333:Core/Src/stm32f7xx_it.c **** 	}
 334:Core/Src/stm32f7xx_it.c ****   /* USER CODE END UART5_IRQn 0 */
 335:Core/Src/stm32f7xx_it.c ****   //HAL_UART_IRQHandler(&huart5);
 336:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN UART5_IRQn 1 */
 337:Core/Src/stm32f7xx_it.c **** 
 338:Core/Src/stm32f7xx_it.c ****   /* USER CODE END UART5_IRQn 1 */
 339:Core/Src/stm32f7xx_it.c **** }
 643              		.loc 1 339 1 view .LVU165
 644 0064 7047     		bx	lr
ARM GAS  C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s 			page 18


 645              	.L41:
 331:Core/Src/stm32f7xx_it.c **** 			UART5->CR1  &= ~(USART_CR1_TXEIE);
 646              		.loc 1 331 4 is_stmt 1 view .LVU166
 331:Core/Src/stm32f7xx_it.c **** 			UART5->CR1  &= ~(USART_CR1_TXEIE);
 647              		.loc 1 331 16 is_stmt 0 view .LVU167
 648 0066 034A     		ldr	r2, .L42
 649 0068 1368     		ldr	r3, [r2]
 650 006a 23F08003 		bic	r3, r3, #128
 651 006e 1360     		str	r3, [r2]
 652              		.loc 1 339 1 view .LVU168
 653 0070 F8E7     		b	.L37
 654              	.L43:
 655 0072 00BF     		.align	2
 656              	.L42:
 657 0074 00500040 		.word	1073762304
 658 0078 00000000 		.word	serial5
 659              		.cfi_endproc
 660              	.LFE261:
 662              		.section	.text.I2C4_EV_IRQHandler,"ax",%progbits
 663              		.align	1
 664              		.global	I2C4_EV_IRQHandler
 665              		.syntax unified
 666              		.thumb
 667              		.thumb_func
 668              		.fpu fpv5-sp-d16
 670              	I2C4_EV_IRQHandler:
 671              	.LFB262:
 340:Core/Src/stm32f7xx_it.c **** 
 341:Core/Src/stm32f7xx_it.c **** /**
 342:Core/Src/stm32f7xx_it.c ****   * @brief This function handles I2C4 event interrupt.
 343:Core/Src/stm32f7xx_it.c ****   */
 344:Core/Src/stm32f7xx_it.c **** void I2C4_EV_IRQHandler(void)
 345:Core/Src/stm32f7xx_it.c **** {
 672              		.loc 1 345 1 is_stmt 1 view -0
 673              		.cfi_startproc
 674              		@ args = 0, pretend = 0, frame = 0
 675              		@ frame_needed = 0, uses_anonymous_args = 0
 676              		@ link register save eliminated.
 677 0000 30B4     		push	{r4, r5}
 678              	.LCFI1:
 679              		.cfi_def_cfa_offset 8
 680              		.cfi_offset 4, -8
 681              		.cfi_offset 5, -4
 346:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN I2C4_EV_IRQn 0 */
 347:Core/Src/stm32f7xx_it.c ****   unsigned long isr = I2C4->ISR;
 682              		.loc 1 347 3 view .LVU170
 683              		.loc 1 347 17 is_stmt 0 view .LVU171
 684 0002 364B     		ldr	r3, .L58
 685 0004 9B69     		ldr	r3, [r3, #24]
 686              	.LVL17:
 348:Core/Src/stm32f7xx_it.c **** 
 349:Core/Src/stm32f7xx_it.c ****   if ( isr & I2C_ISR_TXIS ) 
 687              		.loc 1 349 3 is_stmt 1 view .LVU172
 688              		.loc 1 349 6 is_stmt 0 view .LVU173
 689 0006 13F0020F 		tst	r3, #2
 690 000a 18D0     		beq	.L45
 350:Core/Src/stm32f7xx_it.c ****   {
ARM GAS  C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s 			page 19


 351:Core/Src/stm32f7xx_it.c ****     I2C4->TXDR = i2cReg[read_adress][ index_i2c++ ];
 691              		.loc 1 351 5 is_stmt 1 view .LVU174
 692              		.loc 1 351 37 is_stmt 0 view .LVU175
 693 000c 344A     		ldr	r2, .L58+4
 694 000e 1568     		ldr	r5, [r2]
 695              		.loc 1 351 48 view .LVU176
 696 0010 344C     		ldr	r4, .L58+8
 697 0012 2068     		ldr	r0, [r4]
 698 0014 411C     		adds	r1, r0, #1
 699 0016 2160     		str	r1, [r4]
 700              		.loc 1 351 37 view .LVU177
 701 0018 334A     		ldr	r2, .L58+12
 702 001a 02EB8502 		add	r2, r2, r5, lsl #2
 703 001e 105C     		ldrb	r0, [r2, r0]	@ zero_extendqisi2
 704              		.loc 1 351 16 view .LVU178
 705 0020 2E4A     		ldr	r2, .L58
 706 0022 9062     		str	r0, [r2, #40]
 352:Core/Src/stm32f7xx_it.c ****     if(index_i2c == 4) index_i2c = 0;
 707              		.loc 1 352 5 is_stmt 1 view .LVU179
 708              		.loc 1 352 7 is_stmt 0 view .LVU180
 709 0024 0429     		cmp	r1, #4
 710 0026 07D0     		beq	.L56
 711              	.L46:
 353:Core/Src/stm32f7xx_it.c ****   }
 354:Core/Src/stm32f7xx_it.c ****   else if ( isr & I2C_ISR_RXNE ){
 355:Core/Src/stm32f7xx_it.c **** 
 356:Core/Src/stm32f7xx_it.c ****     //HAL_UART_Transmit(&huart2, (uint8_t*) "RX\n", 4, 100);
 357:Core/Src/stm32f7xx_it.c ****     uint8_t a = (I2C4->RXDR);
 358:Core/Src/stm32f7xx_it.c ****     if(write_adress == -1){
 359:Core/Src/stm32f7xx_it.c ****         if(a & 1){
 360:Core/Src/stm32f7xx_it.c ****           write_adress = a;
 361:Core/Src/stm32f7xx_it.c ****         }
 362:Core/Src/stm32f7xx_it.c ****         else{
 363:Core/Src/stm32f7xx_it.c ****           read_adress = a;
 364:Core/Src/stm32f7xx_it.c ****         }
 365:Core/Src/stm32f7xx_it.c ****     }
 366:Core/Src/stm32f7xx_it.c ****     else{
 367:Core/Src/stm32f7xx_it.c ****       i2cReg[write_adress^1][ index_i2c++ ] = a;
 368:Core/Src/stm32f7xx_it.c ****     }
 369:Core/Src/stm32f7xx_it.c ****     if(index_i2c == 4) write_adress = -1, index_i2c = 0;
 370:Core/Src/stm32f7xx_it.c ****     
 371:Core/Src/stm32f7xx_it.c ****     //printf(buffer, "Rece %d %d\n", index1, index2);
 372:Core/Src/stm32f7xx_it.c ****     //HAL_UART_Transmit(&huart2, (uint8_t*) buffer, strlen(buffer), 100);
 373:Core/Src/stm32f7xx_it.c ****   }
 374:Core/Src/stm32f7xx_it.c ****   else if ( isr & I2C_ISR_STOPF )
 375:Core/Src/stm32f7xx_it.c ****   {
 376:Core/Src/stm32f7xx_it.c ****     if(index_i2c != 0) write_adress = read_adress = -1, index_i2c = 0;
 377:Core/Src/stm32f7xx_it.c ****     //HAL_UART_Transmit(&huart2, (uint8_t*) "STOP\n", 6, 100);
 378:Core/Src/stm32f7xx_it.c ****     I2C4->ISR |= I2C_ISR_TXE;
 379:Core/Src/stm32f7xx_it.c ****     I2C4->ICR = I2C_ICR_STOPCF;
 380:Core/Src/stm32f7xx_it.c ****   }
 381:Core/Src/stm32f7xx_it.c ****   else if ( isr & I2C_ISR_NACKF )
 382:Core/Src/stm32f7xx_it.c ****   {
 383:Core/Src/stm32f7xx_it.c ****     //HAL_UART_Transmit(&huart2, (uint8_t*) "NACK\n", 6, 100);
 384:Core/Src/stm32f7xx_it.c ****     I2C4->ICR = I2C_ICR_NACKCF;
 385:Core/Src/stm32f7xx_it.c ****   }
 386:Core/Src/stm32f7xx_it.c ****   else if ( isr & I2C_ISR_ADDR )
ARM GAS  C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s 			page 20


 387:Core/Src/stm32f7xx_it.c ****   {
 388:Core/Src/stm32f7xx_it.c ****     //HAL_UART_Transmit(&huart2, (uint8_t*) "ADDR\n", 6, 100);
 389:Core/Src/stm32f7xx_it.c ****     /* not required, the addr match interrupt is not enabled */
 390:Core/Src/stm32f7xx_it.c ****     I2C4->ICR = I2C_ICR_ADDRCF;
 391:Core/Src/stm32f7xx_it.c ****   }
 392:Core/Src/stm32f7xx_it.c ****  
 393:Core/Src/stm32f7xx_it.c ****   /* if at any time the addr match is set, clear the flag */
 394:Core/Src/stm32f7xx_it.c ****   /* not sure, whether this is required */
 395:Core/Src/stm32f7xx_it.c ****   if ( isr & I2C_ISR_ADDR )
 712              		.loc 1 395 3 is_stmt 1 view .LVU181
 713              		.loc 1 395 6 is_stmt 0 view .LVU182
 714 0028 13F0080F 		tst	r3, #8
 715 002c 02D0     		beq	.L44
 396:Core/Src/stm32f7xx_it.c ****   {
 397:Core/Src/stm32f7xx_it.c ****     I2C4->ICR = I2C_ICR_ADDRCF;
 716              		.loc 1 397 5 is_stmt 1 view .LVU183
 717              		.loc 1 397 15 is_stmt 0 view .LVU184
 718 002e 2B4B     		ldr	r3, .L58
 719              	.LVL18:
 720              		.loc 1 397 15 view .LVU185
 721 0030 0822     		movs	r2, #8
 722 0032 DA61     		str	r2, [r3, #28]
 723              	.L44:
 398:Core/Src/stm32f7xx_it.c ****   }
 399:Core/Src/stm32f7xx_it.c ****   /* USER CODE END I2C4_EV_IRQn 0 */
 400:Core/Src/stm32f7xx_it.c ****   //HAL_I2C_EV_IRQHandler(&hi2c4);
 401:Core/Src/stm32f7xx_it.c ****   /* USER CODE BEGIN I2C4_EV_IRQn 1 */
 402:Core/Src/stm32f7xx_it.c **** 
 403:Core/Src/stm32f7xx_it.c ****   /* USER CODE END I2C4_EV_IRQn 1 */
 404:Core/Src/stm32f7xx_it.c **** }
 724              		.loc 1 404 1 view .LVU186
 725 0034 30BC     		pop	{r4, r5}
 726              	.LCFI2:
 727              		.cfi_remember_state
 728              		.cfi_restore 5
 729              		.cfi_restore 4
 730              		.cfi_def_cfa_offset 0
 731 0036 7047     		bx	lr
 732              	.LVL19:
 733              	.L56:
 734              	.LCFI3:
 735              		.cfi_restore_state
 352:Core/Src/stm32f7xx_it.c ****   }
 736              		.loc 1 352 24 is_stmt 1 discriminator 1 view .LVU187
 352:Core/Src/stm32f7xx_it.c ****   }
 737              		.loc 1 352 34 is_stmt 0 discriminator 1 view .LVU188
 738 0038 0021     		movs	r1, #0
 739 003a 2160     		str	r1, [r4]
 740 003c F4E7     		b	.L46
 741              	.L45:
 354:Core/Src/stm32f7xx_it.c **** 
 742              		.loc 1 354 8 is_stmt 1 view .LVU189
 354:Core/Src/stm32f7xx_it.c **** 
 743              		.loc 1 354 11 is_stmt 0 view .LVU190
 744 003e 13F0040F 		tst	r3, #4
 745 0042 26D0     		beq	.L47
 746              	.LBB2:
ARM GAS  C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s 			page 21


 357:Core/Src/stm32f7xx_it.c ****     if(write_adress == -1){
 747              		.loc 1 357 5 is_stmt 1 view .LVU191
 357:Core/Src/stm32f7xx_it.c ****     if(write_adress == -1){
 748              		.loc 1 357 22 is_stmt 0 view .LVU192
 749 0044 254A     		ldr	r2, .L58
 750 0046 516A     		ldr	r1, [r2, #36]
 357:Core/Src/stm32f7xx_it.c ****     if(write_adress == -1){
 751              		.loc 1 357 13 view .LVU193
 752 0048 CCB2     		uxtb	r4, r1
 753              	.LVL20:
 358:Core/Src/stm32f7xx_it.c ****         if(a & 1){
 754              		.loc 1 358 5 is_stmt 1 view .LVU194
 358:Core/Src/stm32f7xx_it.c ****         if(a & 1){
 755              		.loc 1 358 21 is_stmt 0 view .LVU195
 756 004a 284A     		ldr	r2, .L58+16
 757 004c 1268     		ldr	r2, [r2]
 358:Core/Src/stm32f7xx_it.c ****         if(a & 1){
 758              		.loc 1 358 7 view .LVU196
 759 004e B2F1FF3F 		cmp	r2, #-1
 760 0052 15D0     		beq	.L57
 367:Core/Src/stm32f7xx_it.c ****     }
 761              		.loc 1 367 7 is_stmt 1 view .LVU197
 367:Core/Src/stm32f7xx_it.c ****     }
 762              		.loc 1 367 26 is_stmt 0 view .LVU198
 763 0054 82F00102 		eor	r2, r2, #1
 367:Core/Src/stm32f7xx_it.c ****     }
 764              		.loc 1 367 40 view .LVU199
 765 0058 2249     		ldr	r1, .L58+8
 766 005a 0868     		ldr	r0, [r1]
 767 005c 451C     		adds	r5, r0, #1
 768 005e 0D60     		str	r5, [r1]
 367:Core/Src/stm32f7xx_it.c ****     }
 769              		.loc 1 367 45 view .LVU200
 770 0060 2149     		ldr	r1, .L58+12
 771 0062 01EB8202 		add	r2, r1, r2, lsl #2
 772 0066 1454     		strb	r4, [r2, r0]
 773              	.L50:
 369:Core/Src/stm32f7xx_it.c ****     
 774              		.loc 1 369 5 is_stmt 1 view .LVU201
 369:Core/Src/stm32f7xx_it.c ****     
 775              		.loc 1 369 18 is_stmt 0 view .LVU202
 776 0068 1E4A     		ldr	r2, .L58+8
 777 006a 1268     		ldr	r2, [r2]
 369:Core/Src/stm32f7xx_it.c ****     
 778              		.loc 1 369 7 view .LVU203
 779 006c 042A     		cmp	r2, #4
 780 006e DBD1     		bne	.L46
 369:Core/Src/stm32f7xx_it.c ****     
 781              		.loc 1 369 24 is_stmt 1 discriminator 1 view .LVU204
 369:Core/Src/stm32f7xx_it.c ****     
 782              		.loc 1 369 37 is_stmt 0 discriminator 1 view .LVU205
 783 0070 1E4A     		ldr	r2, .L58+16
 784 0072 4FF0FF31 		mov	r1, #-1
 785 0076 1160     		str	r1, [r2]
 369:Core/Src/stm32f7xx_it.c ****     
 786              		.loc 1 369 53 discriminator 1 view .LVU206
 787 0078 1A4A     		ldr	r2, .L58+8
ARM GAS  C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s 			page 22


 788 007a 0021     		movs	r1, #0
 789 007c 1160     		str	r1, [r2]
 790 007e D3E7     		b	.L46
 791              	.L57:
 359:Core/Src/stm32f7xx_it.c ****           write_adress = a;
 792              		.loc 1 359 9 is_stmt 1 view .LVU207
 359:Core/Src/stm32f7xx_it.c ****           write_adress = a;
 793              		.loc 1 359 11 is_stmt 0 view .LVU208
 794 0080 11F0010F 		tst	r1, #1
 795 0084 02D0     		beq	.L49
 360:Core/Src/stm32f7xx_it.c ****         }
 796              		.loc 1 360 11 is_stmt 1 view .LVU209
 360:Core/Src/stm32f7xx_it.c ****         }
 797              		.loc 1 360 24 is_stmt 0 view .LVU210
 798 0086 1949     		ldr	r1, .L58+16
 799 0088 0C60     		str	r4, [r1]
 800 008a EDE7     		b	.L50
 801              	.L49:
 363:Core/Src/stm32f7xx_it.c ****         }
 802              		.loc 1 363 11 is_stmt 1 view .LVU211
 363:Core/Src/stm32f7xx_it.c ****         }
 803              		.loc 1 363 23 is_stmt 0 view .LVU212
 804 008c 1449     		ldr	r1, .L58+4
 805 008e 0C60     		str	r4, [r1]
 806 0090 EAE7     		b	.L50
 807              	.LVL21:
 808              	.L47:
 363:Core/Src/stm32f7xx_it.c ****         }
 809              		.loc 1 363 23 view .LVU213
 810              	.LBE2:
 374:Core/Src/stm32f7xx_it.c ****   {
 811              		.loc 1 374 8 is_stmt 1 view .LVU214
 374:Core/Src/stm32f7xx_it.c ****   {
 812              		.loc 1 374 11 is_stmt 0 view .LVU215
 813 0092 13F0200F 		tst	r3, #32
 814 0096 13D0     		beq	.L51
 376:Core/Src/stm32f7xx_it.c ****     //HAL_UART_Transmit(&huart2, (uint8_t*) "STOP\n", 6, 100);
 815              		.loc 1 376 5 is_stmt 1 view .LVU216
 376:Core/Src/stm32f7xx_it.c ****     //HAL_UART_Transmit(&huart2, (uint8_t*) "STOP\n", 6, 100);
 816              		.loc 1 376 18 is_stmt 0 view .LVU217
 817 0098 124A     		ldr	r2, .L58+8
 818 009a 1268     		ldr	r2, [r2]
 376:Core/Src/stm32f7xx_it.c ****     //HAL_UART_Transmit(&huart2, (uint8_t*) "STOP\n", 6, 100);
 819              		.loc 1 376 7 view .LVU218
 820 009c 42B1     		cbz	r2, .L52
 376:Core/Src/stm32f7xx_it.c ****     //HAL_UART_Transmit(&huart2, (uint8_t*) "STOP\n", 6, 100);
 821              		.loc 1 376 24 is_stmt 1 discriminator 1 view .LVU219
 376:Core/Src/stm32f7xx_it.c ****     //HAL_UART_Transmit(&huart2, (uint8_t*) "STOP\n", 6, 100);
 822              		.loc 1 376 51 is_stmt 0 discriminator 1 view .LVU220
 823 009e 4FF0FF32 		mov	r2, #-1
 824 00a2 0F49     		ldr	r1, .L58+4
 825 00a4 0A60     		str	r2, [r1]
 376:Core/Src/stm32f7xx_it.c ****     //HAL_UART_Transmit(&huart2, (uint8_t*) "STOP\n", 6, 100);
 826              		.loc 1 376 37 discriminator 1 view .LVU221
 827 00a6 1149     		ldr	r1, .L58+16
 828 00a8 0A60     		str	r2, [r1]
 376:Core/Src/stm32f7xx_it.c ****     //HAL_UART_Transmit(&huart2, (uint8_t*) "STOP\n", 6, 100);
ARM GAS  C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s 			page 23


 829              		.loc 1 376 67 discriminator 1 view .LVU222
 830 00aa 0E4A     		ldr	r2, .L58+8
 831 00ac 0021     		movs	r1, #0
 832 00ae 1160     		str	r1, [r2]
 833              	.L52:
 378:Core/Src/stm32f7xx_it.c ****     I2C4->ICR = I2C_ICR_STOPCF;
 834              		.loc 1 378 5 is_stmt 1 view .LVU223
 378:Core/Src/stm32f7xx_it.c ****     I2C4->ICR = I2C_ICR_STOPCF;
 835              		.loc 1 378 15 is_stmt 0 view .LVU224
 836 00b0 0A4A     		ldr	r2, .L58
 837 00b2 9169     		ldr	r1, [r2, #24]
 838 00b4 41F00101 		orr	r1, r1, #1
 839 00b8 9161     		str	r1, [r2, #24]
 379:Core/Src/stm32f7xx_it.c ****   }
 840              		.loc 1 379 5 is_stmt 1 view .LVU225
 379:Core/Src/stm32f7xx_it.c ****   }
 841              		.loc 1 379 15 is_stmt 0 view .LVU226
 842 00ba 2021     		movs	r1, #32
 843 00bc D161     		str	r1, [r2, #28]
 844 00be B3E7     		b	.L46
 845              	.L51:
 381:Core/Src/stm32f7xx_it.c ****   {
 846              		.loc 1 381 8 is_stmt 1 view .LVU227
 381:Core/Src/stm32f7xx_it.c ****   {
 847              		.loc 1 381 11 is_stmt 0 view .LVU228
 848 00c0 13F0100F 		tst	r3, #16
 849 00c4 03D0     		beq	.L53
 384:Core/Src/stm32f7xx_it.c ****   }
 850              		.loc 1 384 5 is_stmt 1 view .LVU229
 384:Core/Src/stm32f7xx_it.c ****   }
 851              		.loc 1 384 15 is_stmt 0 view .LVU230
 852 00c6 054A     		ldr	r2, .L58
 853 00c8 1021     		movs	r1, #16
 854 00ca D161     		str	r1, [r2, #28]
 855 00cc ACE7     		b	.L46
 856              	.L53:
 386:Core/Src/stm32f7xx_it.c ****   {
 857              		.loc 1 386 8 is_stmt 1 view .LVU231
 386:Core/Src/stm32f7xx_it.c ****   {
 858              		.loc 1 386 11 is_stmt 0 view .LVU232
 859 00ce 13F0080F 		tst	r3, #8
 860 00d2 A9D0     		beq	.L46
 390:Core/Src/stm32f7xx_it.c ****   }
 861              		.loc 1 390 5 is_stmt 1 view .LVU233
 390:Core/Src/stm32f7xx_it.c ****   }
 862              		.loc 1 390 15 is_stmt 0 view .LVU234
 863 00d4 014A     		ldr	r2, .L58
 864 00d6 0821     		movs	r1, #8
 865 00d8 D161     		str	r1, [r2, #28]
 866 00da A5E7     		b	.L46
 867              	.L59:
 868              		.align	2
 869              	.L58:
 870 00dc 00600040 		.word	1073766400
 871 00e0 00000000 		.word	.LANCHOR0
 872 00e4 00000000 		.word	.LANCHOR1
 873 00e8 00000000 		.word	i2cReg
ARM GAS  C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s 			page 24


 874 00ec 00000000 		.word	.LANCHOR2
 875              		.cfi_endproc
 876              	.LFE262:
 878              		.global	index_i2c
 879              		.global	read_adress
 880              		.global	write_adress
 881              		.section	.bss.index_i2c,"aw",%nobits
 882              		.align	2
 883              		.set	.LANCHOR1,. + 0
 886              	index_i2c:
 887 0000 00000000 		.space	4
 888              		.section	.data.read_adress,"aw"
 889              		.align	2
 890              		.set	.LANCHOR0,. + 0
 893              	read_adress:
 894 0000 FFFFFFFF 		.word	-1
 895              		.section	.data.write_adress,"aw"
 896              		.align	2
 897              		.set	.LANCHOR2,. + 0
 900              	write_adress:
 901 0000 FFFFFFFF 		.word	-1
 902              		.text
 903              	.Letext0:
 904              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\inc
 905              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\inc
 906              		.file 4 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 907              		.file 5 "Core/drogui/interfaces/include/serial.h"
 908              		.file 6 "Core/drogui/utils/include/utils.h"
 909              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
ARM GAS  C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s 			page 25


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f7xx_it.c
C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s:18     .text.NMI_Handler:00000000 $t
C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s:26     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s:44     .text.HardFault_Handler:00000000 $t
C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s:51     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s:68     .text.MemManage_Handler:00000000 $t
C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s:75     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s:92     .text.BusFault_Handler:00000000 $t
C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s:99     .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s:116    .text.UsageFault_Handler:00000000 $t
C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s:123    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s:140    .text.SVC_Handler:00000000 $t
C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s:147    .text.SVC_Handler:00000000 SVC_Handler
C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s:160    .text.DebugMon_Handler:00000000 $t
C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s:167    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s:180    .text.PendSV_Handler:00000000 $t
C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s:187    .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s:200    .text.SysTick_Handler:00000000 $t
C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s:207    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s:227    .text.USART2_IRQHandler:00000000 $t
C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s:234    .text.USART2_IRQHandler:00000000 USART2_IRQHandler
C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s:330    .text.USART2_IRQHandler:00000074 $d
C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s:336    .text.USART3_IRQHandler:00000000 $t
C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s:343    .text.USART3_IRQHandler:00000000 USART3_IRQHandler
C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s:439    .text.USART3_IRQHandler:00000074 $d
C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s:445    .text.UART4_IRQHandler:00000000 $t
C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s:452    .text.UART4_IRQHandler:00000000 UART4_IRQHandler
C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s:548    .text.UART4_IRQHandler:00000074 $d
C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s:554    .text.UART5_IRQHandler:00000000 $t
C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s:561    .text.UART5_IRQHandler:00000000 UART5_IRQHandler
C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s:657    .text.UART5_IRQHandler:00000074 $d
C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s:663    .text.I2C4_EV_IRQHandler:00000000 $t
C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s:670    .text.I2C4_EV_IRQHandler:00000000 I2C4_EV_IRQHandler
C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s:870    .text.I2C4_EV_IRQHandler:000000dc $d
C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s:886    .bss.index_i2c:00000000 index_i2c
C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s:893    .data.read_adress:00000000 read_adress
C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s:900    .data.write_adress:00000000 write_adress
C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s:882    .bss.index_i2c:00000000 $d
C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s:889    .data.read_adress:00000000 $d
C:\Users\GUILLE~1\AppData\Local\Temp\cc7BP2Bi.s:896    .data.write_adress:00000000 $d

UNDEFINED SYMBOLS
HAL_IncTick
serial2
serial3
serial4
serial5
i2cReg
